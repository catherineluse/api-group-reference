{
   "io.k8s.apimachinery.pkg.apis.meta.v1":[
      "condition",
      "groupversionfordiscovery",
      "labelselector",
      "labelselectorrequirement",
      "managedfieldsentry",
      "objectmeta",
      "ownerreference",
      "serveraddressbyclientcidr"
   ],
   "rke-machine.cattle.io.v1.vmwarevspheremachinetemplate.spec.template.spec.common":[
      "taints"
   ],
   "rke-machine.cattle.io.v1.vmwarevspheremachinetemplate.spec.template.spec":[
      "common"
   ],
   "rke-machine.cattle.io.v1.vmwarevspheremachinetemplate.spec.template":[
      "spec"
   ],
   "rke-machine.cattle.io.v1.vmwarevspheremachinetemplate.spec":[
      "template"
   ],
   "rke-machine.cattle.io.v1.vmwarevspheremachinetemplate":[
      "spec"
   ],
   "rke-machine.cattle.io":[
      "amazonec2machine",
      "amazonec2machinetemplate",
      "azuremachine",
      "azuremachinetemplate",
      "digitaloceanmachine",
      "digitaloceanmachinetemplate",
      "harvestermachine",
      "harvestermachinetemplate",
      "linodemachine",
      "linodemachinetemplate",
      "vmwarevspheremachine",
      "vmwarevspheremachinetemplate"
   ],
   "monitoring.coreos.com.v1.prometheusrule.spec.groups":[
      "rules"
   ],
   "monitoring.coreos.com.v1.prometheusrule.spec":[
      "groups"
   ],
   "monitoring.coreos.com.v1.prometheusrule":[
      "spec"
   ],
   "monitoring.coreos.com":[
      "alertmanager",
      "alertmanagerconfig",
      "podmonitor",
      "probe",
      "prometheus",
      "prometheusrule",
      "receiver",
      "route",
      "servicemonitor",
      "thanosruler"
   ],
   "io.k8s.api.core.v1":[
      "affinity",
      "attachedvolume",
      "awselasticblockstorevolumesource",
      "azurediskvolumesource",
      "azurefilepersistentvolumesource",
      "azurefilevolumesource",
      "capabilities",
      "cephfspersistentvolumesource",
      "cephfsvolumesource",
      "cinderpersistentvolumesource",
      "cindervolumesource",
      "clientipconfig",
      "componentcondition",
      "configmapenvsource",
      "configmapkeyselector",
      "configmapnodeconfigsource",
      "configmapprojection",
      "configmapvolumesource",
      "container",
      "containerimage",
      "containerport",
      "containerstate",
      "containerstaterunning",
      "containerstateterminated",
      "containerstatewaiting",
      "containerstatus",
      "csipersistentvolumesource",
      "csivolumesource",
      "daemonendpoint",
      "downwardapiprojection",
      "downwardapivolumefile",
      "downwardapivolumesource",
      "emptydirvolumesource",
      "endpointaddress",
      "endpointport",
      "endpointsubset",
      "envfromsource",
      "envvar",
      "envvarsource",
      "ephemeralcontainer",
      "ephemeralvolumesource",
      "eventseries",
      "eventsource",
      "execaction",
      "fcvolumesource",
      "flexpersistentvolumesource",
      "flexvolumesource",
      "flockervolumesource",
      "gcepersistentdiskvolumesource",
      "gitrepovolumesource",
      "glusterfspersistentvolumesource",
      "glusterfsvolumesource",
      "handler",
      "hostalias",
      "hostpathvolumesource",
      "httpgetaction",
      "httpheader",
      "iscsipersistentvolumesource",
      "iscsivolumesource",
      "keytopath",
      "lifecycle",
      "limitrangeitem",
      "limitrangespec",
      "loadbalanceringress",
      "loadbalancerstatus",
      "localobjectreference",
      "localvolumesource",
      "namespacecondition",
      "namespacespec",
      "namespacestatus",
      "nfsvolumesource",
      "nodeaddress",
      "nodeaffinity",
      "nodecondition",
      "nodeconfigsource",
      "nodeconfigstatus",
      "nodedaemonendpoints",
      "nodeselector",
      "nodeselectorrequirement",
      "nodeselectorterm",
      "nodespec",
      "nodestatus",
      "nodesysteminfo",
      "objectfieldselector",
      "objectreference",
      "persistentvolumeclaimcondition",
      "persistentvolumeclaimspec",
      "persistentvolumeclaimstatus",
      "persistentvolumeclaimtemplate",
      "persistentvolumeclaimvolumesource",
      "persistentvolumespec",
      "persistentvolumestatus",
      "photonpersistentdiskvolumesource",
      "podaffinity",
      "podaffinityterm",
      "podantiaffinity",
      "podcondition",
      "poddnsconfig",
      "poddnsconfigoption",
      "podip",
      "podreadinessgate",
      "podsecuritycontext",
      "podspec",
      "podstatus",
      "podtemplatespec",
      "portstatus",
      "portworxvolumesource",
      "preferredschedulingterm",
      "probe",
      "projectedvolumesource",
      "quobytevolumesource",
      "rbdpersistentvolumesource",
      "rbdvolumesource",
      "replicationcontrollercondition",
      "replicationcontrollerspec",
      "replicationcontrollerstatus",
      "resourcefieldselector",
      "resourcequotaspec",
      "resourcequotastatus",
      "resourcerequirements",
      "scaleiopersistentvolumesource",
      "scaleiovolumesource",
      "scopedresourceselectorrequirement",
      "scopeselector",
      "seccompprofile",
      "secretenvsource",
      "secretkeyselector",
      "secretprojection",
      "secretreference",
      "secretvolumesource",
      "securitycontext",
      "selinuxoptions",
      "serviceaccounttokenprojection",
      "serviceport",
      "servicespec",
      "servicestatus",
      "sessionaffinityconfig",
      "storageospersistentvolumesource",
      "storageosvolumesource",
      "sysctl",
      "taint",
      "tcpsocketaction",
      "toleration",
      "topologyselectorlabelrequirement",
      "topologyselectorterm",
      "topologyspreadconstraint",
      "typedlocalobjectreference",
      "volume",
      "volumedevice",
      "volumemount",
      "volumenodeaffinity",
      "volumeprojection",
      "vspherevirtualdiskvolumesource",
      "weightedpodaffinityterm",
      "windowssecuritycontextoptions"
   ],
   "Not in an API Group":[
      "apigroup",
      "apiroot",
      "applyinput",
      "applyoutput",
      "binding",
      "chartactionoutput",
      "chartinstall",
      "chartinstallaction",
      "chartuninstallaction",
      "chartupgrade",
      "chartupgradeaction",
      "componentstatus",
      "configmap",
      "count",
      "endpoints",
      "event",
      "generatekubeconfigoutput",
      "limitrange",
      "namespace",
      "node",
      "persistentvolume",
      "persistentvolumeclaim",
      "pod",
      "podtemplate",
      "replicationcontroller",
      "resourcequota",
      "schema",
      "secret",
      "service",
      "serviceaccount",
      "subscribe",
      "userpreference"
   ],
   "cluster.x-k8s.io.v1beta1.cluster.spec.clusterNetwork":[
      "pods",
      "services"
   ],
   "cluster.x-k8s.io.v1beta1.cluster.spec":[
      "clusternetwork",
      "controlplaneendpoint",
      "controlplaneref",
      "infrastructureref"
   ],
   "cluster.x-k8s.io.v1beta1.cluster":[
      "spec",
      "status"
   ],
   "cluster.x-k8s.io.v1beta1.cluster.status":[
      "conditions",
      "failuredomains"
   ],
   "cluster.x-k8s.io":[
      "cluster",
      "machine",
      "machinedeployment",
      "machinehealthcheck",
      "machineset"
   ],
   "monitoring.coreos.com.v1.podmonitor.spec":[
      "namespaceselector",
      "podmetricsendpoints",
      "selector"
   ],
   "monitoring.coreos.com.v1.podmonitor.spec.podMetricsEndpoints.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1.podmonitor.spec.podMetricsEndpoints.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.podmonitor.spec.podMetricsEndpoints.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.podmonitor.spec.podMetricsEndpoints":[
      "authorization",
      "basicauth",
      "bearertokensecret",
      "metricrelabelings",
      "oauth2",
      "relabelings",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1.podmonitor.spec.podMetricsEndpoints.oauth2.clientId":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.podmonitor.spec.podMetricsEndpoints.oauth2":[
      "clientid",
      "clientsecret"
   ],
   "monitoring.coreos.com.v1.podmonitor.spec.podMetricsEndpoints.basicAuth":[
      "password",
      "username"
   ],
   "monitoring.coreos.com.v1.podmonitor.spec.podMetricsEndpoints.authorization":[
      "credentials"
   ],
   "monitoring.coreos.com.v1.podmonitor.spec.selector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.podmonitor":[
      "spec"
   ],
   "logging.banzaicloud.io.v1beta1.logging":[
      "spec",
      "status"
   ],
   "logging.banzaicloud.io":[
      "clusterflow",
      "clusteroutput",
      "flow",
      "logging",
      "output"
   ],
   "management.cattle.io":[
      "apiservice",
      "authconfig",
      "catalog",
      "catalogtemplate",
      "catalogtemplateversion",
      "cisbenchmarkversion",
      "cisconfig",
      "cluster",
      "clusteralert",
      "clusteralertgroup",
      "clusteralertrule",
      "clustercatalog",
      "clusterlogging",
      "clustermonitorgraph",
      "clusterregistrationtoken",
      "clusterroletemplatebinding",
      "clusterscan",
      "clustertemplate",
      "clustertemplaterevision",
      "composeconfig",
      "dynamicschema",
      "etcdbackup",
      "feature",
      "fleetworkspace",
      "globaldns",
      "globaldnsprovider",
      "globalrole",
      "globalrolebinding",
      "group",
      "groupmember",
      "kontainerdriver",
      "managedchart",
      "monitormetric",
      "multiclusterapp",
      "multiclusterapprevision",
      "node",
      "nodedriver",
      "nodepool",
      "nodetemplate",
      "notifier",
      "podsecuritypolicytemplate",
      "podsecuritypolicytemplateprojectbinding",
      "preference",
      "project",
      "projectalert",
      "projectalertgroup",
      "projectalertrule",
      "projectcatalog",
      "projectlogging",
      "projectmonitorgraph",
      "projectnetworkpolicy",
      "projectroletemplatebinding",
      "rkeaddon",
      "rkek8sserviceoption",
      "rkek8ssystemimage",
      "roletemplate",
      "samltoken",
      "setting",
      "template",
      "templatecontent",
      "templateversion",
      "token",
      "user",
      "userattribute"
   ],
   "fleet.cattle.io.v1alpha1.gitrepo.spec.targets.clusterSelector":[
      "matchexpressions"
   ],
   "fleet.cattle.io.v1alpha1.gitrepo.spec.targets":[
      "clustergroupselector",
      "clusterselector"
   ],
   "fleet.cattle.io.v1alpha1.gitrepo.spec.targets.clusterGroupSelector":[
      "matchexpressions"
   ],
   "fleet.cattle.io.v1alpha1.gitrepo.spec":[
      "imagescancommit",
      "targets"
   ],
   "fleet.cattle.io.v1alpha1.gitrepo":[
      "spec",
      "status"
   ],
   "fleet.cattle.io.v1alpha1.gitrepo.status.summary.nonReadyResources":[
      "modifiedstatus",
      "nonreadystatus"
   ],
   "fleet.cattle.io.v1alpha1.gitrepo.status.summary.nonReadyResources.nonReadyStatus":[
      "summary"
   ],
   "fleet.cattle.io.v1alpha1.gitrepo.status.summary":[
      "nonreadyresources"
   ],
   "fleet.cattle.io.v1alpha1.gitrepo.status":[
      "conditions",
      "display",
      "resourcecounts",
      "resources",
      "summary"
   ],
   "fleet.cattle.io.v1alpha1.gitrepo.status.resources.perClusterState":[
      "patch"
   ],
   "fleet.cattle.io.v1alpha1.gitrepo.status.resources":[
      "perclusterstate"
   ],
   "fleet.cattle.io":[
      "bundle",
      "bundledeployment",
      "bundlenamespacemapping",
      "cluster",
      "clustergroup",
      "clusterregistration",
      "clusterregistrationtoken",
      "content",
      "gitrepo",
      "gitreporestriction",
      "imagescan"
   ],
   "constraints.gatekeeper.sh.v1beta1.k8srequiredlabels.spec.match":[
      "kinds",
      "labelselector",
      "namespaceselector"
   ],
   "constraints.gatekeeper.sh.v1beta1.k8srequiredlabels.spec.match.labelSelector":[
      "matchexpressions"
   ],
   "constraints.gatekeeper.sh.v1beta1.k8srequiredlabels.spec.match.namespaceSelector":[
      "matchexpressions"
   ],
   "constraints.gatekeeper.sh.v1beta1.k8srequiredlabels.spec":[
      "match"
   ],
   "constraints.gatekeeper.sh.v1beta1.k8srequiredlabels":[
      "spec"
   ],
   "constraints.gatekeeper.sh":[
      "constraint",
      "k8sallowedrepos",
      "k8srequiredlabels"
   ],
   "status.gatekeeper.sh.v1beta1.mutatorpodstatus.status":[
      "errors"
   ],
   "status.gatekeeper.sh.v1beta1.mutatorpodstatus":[
      "status"
   ],
   "status.gatekeeper.sh":[
      "constraintpodstatus",
      "constrainttemplatepodstatus",
      "mutatorpodstatus"
   ],
   "io.k8s.api.batch.v1":[
      "cronjobspec",
      "cronjobstatus",
      "jobcondition",
      "jobspec",
      "jobstatus",
      "jobtemplatespec",
      "uncountedterminatedpods"
   ],
   "batch":[
      "cronjob",
      "job"
   ],
   "gitjob.cattle.io.v1.gitjob.spec":[
      "git",
      "jobspec"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.metadata":[
      "managedfields",
      "ownerreferences"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.metadata.managedFields":[
      "fieldsv1"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template":[
      "metadata",
      "spec"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference":[
      "matchexpressions",
      "matchfields"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution":[
      "preference"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.nodeAffinity":[
      "preferredduringschedulingignoredduringexecution",
      "requiredduringschedulingignoredduringexecution"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms":[
      "matchexpressions",
      "matchfields"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution":[
      "nodeselectorterms"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity":[
      "nodeaffinity",
      "podaffinity",
      "podantiaffinity"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector":[
      "matchexpressions"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm":[
      "labelselector"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution":[
      "podaffinityterm"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.podAffinity":[
      "preferredduringschedulingignoredduringexecution",
      "requiredduringschedulingignoredduringexecution"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector":[
      "matchexpressions"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution":[
      "labelselector"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector":[
      "matchexpressions"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm":[
      "labelselector"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution":[
      "podaffinityterm"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.podAntiAffinity":[
      "preferredduringschedulingignoredduringexecution",
      "requiredduringschedulingignoredduringexecution"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector":[
      "matchexpressions"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution":[
      "labelselector"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec":[
      "affinity",
      "containers",
      "dnsconfig",
      "ephemeralcontainers",
      "hostaliases",
      "imagepullsecrets",
      "initcontainers",
      "readinessgates",
      "securitycontext",
      "tolerations",
      "topologyspreadconstraints",
      "volumes"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.lifecycle.postStart":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.lifecycle.postStart.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.lifecycle":[
      "poststart",
      "prestop"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.lifecycle.preStop":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.lifecycle.preStop.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers":[
      "env",
      "envfrom",
      "lifecycle",
      "livenessprobe",
      "ports",
      "readinessprobe",
      "resources",
      "securitycontext",
      "startupprobe",
      "volumedevices",
      "volumemounts"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.livenessProbe.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.livenessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.envFrom":[
      "configmapref",
      "secretref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.env.valueFrom":[
      "configmapkeyref",
      "fieldref",
      "resourcefieldref",
      "secretkeyref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.env":[
      "valuefrom"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.readinessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.readinessProbe.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.securityContext":[
      "capabilities",
      "seccompprofile",
      "selinuxoptions",
      "windowsoptions"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.startupProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.containers.startupProbe.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers":[
      "env",
      "envfrom",
      "lifecycle",
      "livenessprobe",
      "ports",
      "readinessprobe",
      "resources",
      "securitycontext",
      "startupprobe",
      "volumedevices",
      "volumemounts"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.envFrom":[
      "configmapref",
      "secretref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.startupProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.startupProbe.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.livenessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.livenessProbe.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.lifecycle.preStop":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.lifecycle.preStop.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.lifecycle":[
      "poststart",
      "prestop"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.lifecycle.postStart":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.lifecycle.postStart.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.securityContext":[
      "capabilities",
      "seccompprofile",
      "selinuxoptions",
      "windowsoptions"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.env.valueFrom":[
      "configmapkeyref",
      "fieldref",
      "resourcefieldref",
      "secretkeyref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.env":[
      "valuefrom"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.readinessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.initContainers.readinessProbe.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.dnsConfig":[
      "options"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.topologySpreadConstraints.labelSelector":[
      "matchexpressions"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.topologySpreadConstraints":[
      "labelselector"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.securityContext":[
      "seccompprofile",
      "selinuxoptions",
      "sysctls",
      "windowsoptions"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers":[
      "env",
      "envfrom",
      "lifecycle",
      "livenessprobe",
      "ports",
      "readinessprobe",
      "resources",
      "securitycontext",
      "startupprobe",
      "volumedevices",
      "volumemounts"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.livenessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.livenessProbe.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.startupProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.startupProbe.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.readinessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.readinessProbe.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.securityContext":[
      "capabilities",
      "seccompprofile",
      "selinuxoptions",
      "windowsoptions"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.envFrom":[
      "configmapref",
      "secretref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.lifecycle.postStart.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.lifecycle.postStart":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.lifecycle":[
      "poststart",
      "prestop"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.lifecycle.preStop":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.lifecycle.preStop.httpGet":[
      "httpheaders"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.env.valueFrom":[
      "configmapkeyref",
      "fieldref",
      "resourcefieldref",
      "secretkeyref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.ephemeralContainers.env":[
      "valuefrom"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes":[
      "awselasticblockstore",
      "azuredisk",
      "azurefile",
      "cephfs",
      "cinder",
      "configmap",
      "csi",
      "downwardapi",
      "emptydir",
      "ephemeral",
      "fc",
      "flexvolume",
      "flocker",
      "gcepersistentdisk",
      "gitrepo",
      "glusterfs",
      "hostpath",
      "iscsi",
      "nfs",
      "persistentvolumeclaim",
      "photonpersistentdisk",
      "portworxvolume",
      "projected",
      "quobyte",
      "rbd",
      "scaleio",
      "secret",
      "storageos",
      "vspherevolume"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.csi":[
      "nodepublishsecretref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.storageos":[
      "secretref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.rbd":[
      "secretref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.flexVolume":[
      "secretref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.cephfs":[
      "secretref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.iscsi":[
      "secretref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.scaleIO":[
      "secretref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.secret":[
      "items"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.downwardAPI.items":[
      "fieldref",
      "resourcefieldref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.downwardAPI":[
      "items"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.configMap":[
      "items"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.managedFields":[
      "fieldsv1"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata":[
      "managedfields",
      "ownerreferences"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.ephemeral.volumeClaimTemplate":[
      "metadata",
      "spec"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.selector":[
      "matchexpressions"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec":[
      "datasource",
      "resources",
      "selector"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.ephemeral":[
      "volumeclaimtemplate"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.cinder":[
      "secretref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.projected.sources.downwardAPI.items":[
      "fieldref",
      "resourcefieldref"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.projected.sources.downwardAPI":[
      "items"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.projected.sources":[
      "configmap",
      "downwardapi",
      "secret",
      "serviceaccounttoken"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.projected.sources.secret":[
      "items"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.projected.sources.configMap":[
      "items"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.template.spec.volumes.projected":[
      "sources"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec":[
      "selector",
      "template"
   ],
   "gitjob.cattle.io.v1.gitjob.spec.jobSpec.selector":[
      "matchexpressions"
   ],
   "gitjob.cattle.io.v1.gitjob":[
      "spec",
      "status"
   ],
   "gitjob.cattle.io.v1.gitjob.status":[
      "conditions"
   ],
   "gitjob.cattle.io":[
      "gitjob"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assign.spec.match":[
      "kinds",
      "labelselector",
      "namespaceselector"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assign.spec.match.labelSelector":[
      "matchexpressions"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assign.spec.match.namespaceSelector":[
      "matchexpressions"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assign.spec":[
      "applyto",
      "match",
      "parameters"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assign.spec.parameters":[
      "assign",
      "assignif",
      "pathtests"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assign":[
      "spec",
      "status"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assign.status.byPod":[
      "errors"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assign.status":[
      "bypod"
   ],
   "mutations.gatekeeper.sh":[
      "assign",
      "assignmetadata"
   ],
   "security.istio.io.v1beta1.authorizationpolicy.spec":[
      "provider",
      "rules",
      "selector"
   ],
   "security.istio.io.v1beta1.authorizationpolicy.spec.rules":[
      "from",
      "to",
      "when"
   ],
   "security.istio.io.v1beta1.authorizationpolicy.spec.rules.from":[
      "source"
   ],
   "security.istio.io.v1beta1.authorizationpolicy.spec.rules.to":[
      "operation"
   ],
   "security.istio.io.v1beta1.authorizationpolicy":[
      "spec",
      "status"
   ],
   "security.istio.io":[
      "authorizationpolicy",
      "peerauthentication",
      "requestauthentication"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assignmetadata.spec.match.labelSelector":[
      "matchexpressions"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assignmetadata.spec.match":[
      "kinds",
      "labelselector",
      "namespaceselector"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assignmetadata.spec.match.namespaceSelector":[
      "matchexpressions"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assignmetadata.spec":[
      "match",
      "parameters"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assignmetadata.spec.parameters":[
      "assign"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assignmetadata":[
      "spec",
      "status"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assignmetadata.status.byPod":[
      "errors"
   ],
   "mutations.gatekeeper.sh.v1alpha1.assignmetadata.status":[
      "bypod"
   ],
   "io.k8s.api.admissionregistration.v1":[
      "mutatingwebhook",
      "rulewithoperations",
      "servicereference",
      "validatingwebhook",
      "webhookclientconfig"
   ],
   "admissionregistration.k8s.io":[
      "mutatingwebhookconfiguration",
      "validatingwebhookconfiguration"
   ],
   "cis.cattle.io.v1.clusterscan.status":[
      "conditions",
      "display",
      "summary"
   ],
   "cis.cattle.io.v1.clusterscan":[
      "spec",
      "status"
   ],
   "cis.cattle.io.v1.clusterscan.spec.scheduledScanConfig":[
      "scanalertrule"
   ],
   "cis.cattle.io.v1.clusterscan.spec":[
      "scheduledscanconfig"
   ],
   "cis.cattle.io":[
      "clusterscan",
      "clusterscanbenchmark",
      "clusterscanprofile",
      "clusterscanreport"
   ],
   "monitoring.coreos.com.v1.probe.spec":[
      "authorization",
      "basicauth",
      "bearertokensecret",
      "oauth2",
      "prober",
      "targets",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1.probe.spec.oauth2.clientId":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.probe.spec.oauth2":[
      "clientid",
      "clientsecret"
   ],
   "monitoring.coreos.com.v1.probe.spec.basicAuth":[
      "password",
      "username"
   ],
   "monitoring.coreos.com.v1.probe.spec.authorization":[
      "credentials"
   ],
   "monitoring.coreos.com.v1.probe.spec.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1.probe.spec.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.probe.spec.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.probe.spec.targets.ingress":[
      "namespaceselector",
      "relabelingconfigs",
      "selector"
   ],
   "monitoring.coreos.com.v1.probe.spec.targets.ingress.selector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.probe.spec.targets":[
      "ingress",
      "staticconfig"
   ],
   "monitoring.coreos.com.v1.probe.spec.targets.staticConfig":[
      "relabelingconfigs"
   ],
   "monitoring.coreos.com.v1.probe":[
      "spec"
   ],
   "io.k8s.api.authorization.v1":[
      "nonresourceattributes",
      "nonresourcerule",
      "resourceattributes",
      "resourcerule",
      "selfsubjectaccessreviewspec",
      "selfsubjectrulesreviewspec",
      "subjectaccessreviewspec",
      "subjectaccessreviewstatus",
      "subjectrulesreviewstatus"
   ],
   "authorization.k8s.io":[
      "localsubjectaccessreview",
      "selfsubjectaccessreview",
      "selfsubjectrulesreview",
      "subjectaccessreview"
   ],
   "catalog.cattle.io.v1.app.spec":[
      "chart",
      "info",
      "resources",
      "values"
   ],
   "catalog.cattle.io.v1.app.spec.chart":[
      "metadata",
      "values"
   ],
   "catalog.cattle.io.v1.app.spec.chart.metadata":[
      "maintainers"
   ],
   "catalog.cattle.io.v1.app":[
      "spec",
      "status"
   ],
   "catalog.cattle.io.v1.app.status":[
      "summary"
   ],
   "catalog.cattle.io":[
      "app",
      "clusterrepo",
      "operation"
   ],
   "constraints.gatekeeper.sh.v1beta1.k8sallowedrepos.spec.match.namespaceSelector":[
      "matchexpressions"
   ],
   "constraints.gatekeeper.sh.v1beta1.k8sallowedrepos.spec.match":[
      "kinds",
      "labelselector",
      "namespaceselector"
   ],
   "constraints.gatekeeper.sh.v1beta1.k8sallowedrepos.spec.match.labelSelector":[
      "matchexpressions"
   ],
   "constraints.gatekeeper.sh.v1beta1.k8sallowedrepos.spec":[
      "match"
   ],
   "constraints.gatekeeper.sh.v1beta1.k8sallowedrepos":[
      "spec"
   ],
   "provisioning.cattle.io.v1.cluster.spec.rkeConfig":[
      "chartvalues",
      "etcd",
      "etcdsnapshotcreate",
      "etcdsnapshotrestore",
      "infrastructureref",
      "machineglobalconfig",
      "machinepools",
      "machineselectorconfig",
      "registries",
      "rotatecertificates",
      "rotateencryptionkeys",
      "upgradestrategy"
   ],
   "provisioning.cattle.io.v1.cluster.spec.rkeConfig.upgradeStrategy.workerDrainOptions":[
      "postdrainhooks",
      "predrainhooks"
   ],
   "provisioning.cattle.io.v1.cluster.spec.rkeConfig.upgradeStrategy":[
      "controlplanedrainoptions",
      "workerdrainoptions"
   ],
   "provisioning.cattle.io.v1.cluster.spec.rkeConfig.upgradeStrategy.controlPlaneDrainOptions":[
      "postdrainhooks",
      "predrainhooks"
   ],
   "provisioning.cattle.io.v1.cluster.spec.rkeConfig.registries":[
      "configs",
      "mirrors"
   ],
   "provisioning.cattle.io.v1.cluster.spec.rkeConfig.machinePools":[
      "machineconfigref",
      "rollingupdate",
      "taints"
   ],
   "provisioning.cattle.io.v1.cluster.spec.rkeConfig.machineSelectorConfig":[
      "config",
      "machinelabelselector"
   ],
   "provisioning.cattle.io.v1.cluster.spec.rkeConfig.machineSelectorConfig.machineLabelSelector":[
      "matchexpressions"
   ],
   "provisioning.cattle.io.v1.cluster.spec.rkeConfig.etcd":[
      "s3"
   ],
   "provisioning.cattle.io.v1.cluster.spec":[
      "agentenvvars",
      "clusterapiconfig",
      "localclusterauthendpoint",
      "rkeconfig"
   ],
   "provisioning.cattle.io.v1.cluster":[
      "spec",
      "status"
   ],
   "provisioning.cattle.io.v1.cluster.status":[
      "conditions"
   ],
   "provisioning.cattle.io":[
      "cluster"
   ],
   "networking.istio.io.v1alpha3.envoyfilter.spec":[
      "configpatches",
      "workloadselector"
   ],
   "networking.istio.io.v1alpha3.envoyfilter.spec.configPatches.match.listener.filterChain.filter":[
      "subfilter"
   ],
   "networking.istio.io.v1alpha3.envoyfilter.spec.configPatches.match.listener.filterChain":[
      "filter"
   ],
   "networking.istio.io.v1alpha3.envoyfilter.spec.configPatches.match.listener":[
      "filterchain"
   ],
   "networking.istio.io.v1alpha3.envoyfilter.spec.configPatches.match":[
      "cluster",
      "listener",
      "proxy",
      "routeconfiguration"
   ],
   "networking.istio.io.v1alpha3.envoyfilter.spec.configPatches.match.routeConfiguration.vhost":[
      "route"
   ],
   "networking.istio.io.v1alpha3.envoyfilter.spec.configPatches.match.routeConfiguration":[
      "vhost"
   ],
   "networking.istio.io.v1alpha3.envoyfilter.spec.configPatches":[
      "match",
      "patch"
   ],
   "networking.istio.io.v1alpha3.envoyfilter.spec.configPatches.patch":[
      "value"
   ],
   "networking.istio.io.v1alpha3.envoyfilter":[
      "spec",
      "status"
   ],
   "networking.istio.io":[
      "destinationrule",
      "envoyfilter",
      "gateway",
      "serviceentry",
      "sidecar",
      "virtualservice",
      "workloadentry",
      "workloadgroup"
   ],
   "io.k8s.api.networking.v1":[
      "httpingresspath",
      "httpingressrulevalue",
      "ingressbackend",
      "ingressclassparametersreference",
      "ingressclassspec",
      "ingressrule",
      "ingressservicebackend",
      "ingressspec",
      "ingressstatus",
      "ingresstls",
      "ipblock",
      "networkpolicyegressrule",
      "networkpolicyingressrule",
      "networkpolicypeer",
      "networkpolicyport",
      "networkpolicyspec",
      "servicebackendport"
   ],
   "networking.k8s.io":[
      "ingress",
      "ingressclass",
      "networkpolicy"
   ],
   "rke.cattle.io.v1.rkecontrolplane.spec.etcd":[
      "s3"
   ],
   "rke.cattle.io.v1.rkecontrolplane.spec":[
      "agentenvvars",
      "chartvalues",
      "etcd",
      "etcdsnapshotcreate",
      "etcdsnapshotrestore",
      "localclusterauthendpoint",
      "machineglobalconfig",
      "machineselectorconfig",
      "registries",
      "rotatecertificates",
      "rotateencryptionkeys",
      "upgradestrategy"
   ],
   "rke.cattle.io.v1.rkecontrolplane.spec.upgradeStrategy.workerDrainOptions":[
      "postdrainhooks",
      "predrainhooks"
   ],
   "rke.cattle.io.v1.rkecontrolplane.spec.upgradeStrategy":[
      "controlplanedrainoptions",
      "workerdrainoptions"
   ],
   "rke.cattle.io.v1.rkecontrolplane.spec.upgradeStrategy.controlPlaneDrainOptions":[
      "postdrainhooks",
      "predrainhooks"
   ],
   "rke.cattle.io.v1.rkecontrolplane.spec.machineSelectorConfig.machineLabelSelector":[
      "matchexpressions"
   ],
   "rke.cattle.io.v1.rkecontrolplane.spec.machineSelectorConfig":[
      "config",
      "machinelabelselector"
   ],
   "rke.cattle.io.v1.rkecontrolplane.spec.registries":[
      "configs",
      "mirrors"
   ],
   "rke.cattle.io.v1.rkecontrolplane":[
      "spec",
      "status"
   ],
   "rke.cattle.io.v1.rkecontrolplane.status":[
      "conditions",
      "etcdsnapshotcreate",
      "etcdsnapshotrestore"
   ],
   "rke.cattle.io":[
      "custommachine",
      "etcdsnapshot",
      "rkebootstrap",
      "rkebootstraptemplate",
      "rkecluster",
      "rkecontrolplane"
   ],
   "security.istio.io.v1beta1.peerauthentication.spec":[
      "mtls",
      "portlevelmtls",
      "selector"
   ],
   "security.istio.io.v1beta1.peerauthentication":[
      "spec",
      "status"
   ],
   "rke-machine.cattle.io.v1.azuremachine.spec.common":[
      "taints"
   ],
   "rke-machine.cattle.io.v1.azuremachine.spec":[
      "common"
   ],
   "rke-machine.cattle.io.v1.azuremachine":[
      "spec",
      "status"
   ],
   "rke-machine.cattle.io.v1.azuremachine.status":[
      "addresses",
      "conditions"
   ],
   "apps":[
      "controllerrevision",
      "daemonset",
      "deployment",
      "replicaset",
      "statefulset"
   ],
   "cis.cattle.io.v1.clusterscanreport":[
      "spec"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec":[
      "dependson",
      "diff",
      "helm",
      "kustomize",
      "resources",
      "rolloutstrategy",
      "targetrestrictions",
      "targets",
      "yaml"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.rolloutStrategy.partitions.clusterGroupSelector":[
      "matchexpressions"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.rolloutStrategy.partitions":[
      "clustergroupselector",
      "clusterselector"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.rolloutStrategy.partitions.clusterSelector":[
      "matchexpressions"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.rolloutStrategy":[
      "partitions"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.diff.comparePatches":[
      "operations"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.diff":[
      "comparepatches"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.targets.clusterSelector":[
      "matchexpressions"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.targets":[
      "clustergroupselector",
      "clusterselector",
      "diff",
      "helm",
      "kustomize",
      "yaml"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.targets.clusterGroupSelector":[
      "matchexpressions"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.targets.diff.comparePatches":[
      "operations"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.targets.diff":[
      "comparepatches"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.targets.helm":[
      "values",
      "valuesfrom"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.targets.helm.valuesFrom":[
      "configmapkeyref",
      "secretkeyref"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.helm":[
      "values",
      "valuesfrom"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.helm.valuesFrom":[
      "configmapkeyref",
      "secretkeyref"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.targetRestrictions.clusterGroupSelector":[
      "matchexpressions"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.targetRestrictions":[
      "clustergroupselector",
      "clusterselector"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.targetRestrictions.clusterSelector":[
      "matchexpressions"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.dependsOn.selector":[
      "matchexpressions"
   ],
   "fleet.cattle.io.v1alpha1.bundle.spec.dependsOn":[
      "selector"
   ],
   "fleet.cattle.io.v1alpha1.bundle":[
      "spec",
      "status"
   ],
   "fleet.cattle.io.v1alpha1.bundle.status":[
      "conditions",
      "display",
      "partitions",
      "resourcekey",
      "summary"
   ],
   "fleet.cattle.io.v1alpha1.bundle.status.partitions.summary.nonReadyResources":[
      "modifiedstatus",
      "nonreadystatus"
   ],
   "fleet.cattle.io.v1alpha1.bundle.status.partitions.summary.nonReadyResources.nonReadyStatus":[
      "summary"
   ],
   "fleet.cattle.io.v1alpha1.bundle.status.partitions.summary":[
      "nonreadyresources"
   ],
   "fleet.cattle.io.v1alpha1.bundle.status.partitions":[
      "summary"
   ],
   "fleet.cattle.io.v1alpha1.bundle.status.summary.nonReadyResources":[
      "modifiedstatus",
      "nonreadystatus"
   ],
   "fleet.cattle.io.v1alpha1.bundle.status.summary.nonReadyResources.nonReadyStatus":[
      "summary"
   ],
   "fleet.cattle.io.v1alpha1.bundle.status.summary":[
      "nonreadyresources"
   ],
   "io.k8s.api.storage.v1":[
      "csidriverspec",
      "csinodedriver",
      "csinodespec",
      "tokenrequest",
      "volumeattachmentsource",
      "volumeattachmentspec",
      "volumeattachmentstatus",
      "volumeerror",
      "volumenoderesources"
   ],
   "storage.k8s.io":[
      "csidriver",
      "csinode",
      "csistoragecapacity",
      "storageclass",
      "volumeattachment"
   ],
   "rke.cattle.io.v1.rkebootstrap":[
      "spec",
      "status"
   ],
   "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1":[
      "apiservicecondition",
      "apiservicespec",
      "apiservicestatus",
      "servicereference"
   ],
   "apiregistration.k8s.io":[
      "apiservice"
   ],
   "resources.cattle.io.v1.backup.status":[
      "conditions"
   ],
   "resources.cattle.io.v1.backup":[
      "spec",
      "status"
   ],
   "resources.cattle.io.v1.backup.spec.storageLocation":[
      "s3"
   ],
   "resources.cattle.io.v1.backup.spec":[
      "storagelocation"
   ],
   "resources.cattle.io":[
      "backup",
      "resourceset",
      "restore"
   ],
   "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1":[
      "customresourcecolumndefinition",
      "customresourceconversion",
      "customresourcedefinitioncondition",
      "customresourcedefinitionnames",
      "customresourcedefinitionspec",
      "customresourcedefinitionstatus",
      "customresourcedefinitionversion",
      "customresourcesubresources",
      "customresourcesubresourcescale",
      "customresourcevalidation",
      "externaldocumentation",
      "jsonschemaprops",
      "servicereference",
      "webhookclientconfig",
      "webhookconversion"
   ],
   "apiextensions.k8s.io":[
      "customresourcedefinition"
   ],
   "io.k8s.api.flowcontrol.v1beta1":[
      "flowdistinguishermethod",
      "flowschemacondition",
      "flowschemaspec",
      "flowschemastatus",
      "groupsubject",
      "limitedprioritylevelconfiguration",
      "limitresponse",
      "nonresourcepolicyrule",
      "policyruleswithsubjects",
      "prioritylevelconfigurationcondition",
      "prioritylevelconfigurationreference",
      "prioritylevelconfigurationspec",
      "prioritylevelconfigurationstatus",
      "queuingconfiguration",
      "resourcepolicyrule",
      "serviceaccountsubject",
      "subject",
      "usersubject"
   ],
   "flowcontrol.apiserver.k8s.io":[
      "flowschema",
      "prioritylevelconfiguration"
   ],
   "rke-machine-config.cattle.io":[
      "amazonec2config",
      "azureconfig",
      "digitaloceanconfig",
      "harvesterconfig",
      "linodeconfig",
      "vmwarevsphereconfig"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.password.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.password":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.password.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch":[
      "api_key",
      "buffer",
      "ca_file",
      "client_cert",
      "client_key",
      "client_key_pass",
      "password",
      "template_file"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.ca_file.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.ca_file":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.ca_file.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.client_key_pass.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.client_key_pass":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.client_key_pass.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.api_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.api_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.api_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.template_file.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.template_file":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.template_file.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.client_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.client_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.client_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.client_cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.client_cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.elasticsearch.client_cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec":[
      "awselasticsearch",
      "azurestorage",
      "cloudwatch",
      "datadog",
      "elasticsearch",
      "file",
      "forward",
      "gcs",
      "gelf",
      "http",
      "kafka",
      "kinesisstream",
      "logdna",
      "logz",
      "loki",
      "newrelic",
      "nullout",
      "oss",
      "redis",
      "s3",
      "splunkhec",
      "sqs",
      "sumologic",
      "syslog"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.sqs":[
      "aws_key_id",
      "aws_sec_key",
      "buffer"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.sqs.aws_key_id.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.sqs.aws_key_id":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.sqs.aws_key_id.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.sqs.aws_sec_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.sqs.aws_sec_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.sqs.aws_sec_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.logz.endpoint.token.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.logz.endpoint.token":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.logz.endpoint.token.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.logz.endpoint":[
      "token"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.logz":[
      "buffer",
      "endpoint"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch":[
      "buffer",
      "endpoint",
      "format"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.assume_role_web_identity_token_file.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.assume_role_web_identity_token_file":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.assume_role_web_identity_token_file.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint":[
      "access_key_id",
      "assume_role_arn",
      "assume_role_session_name",
      "assume_role_web_identity_token_file",
      "ecs_container_credentials_relative_uri",
      "secret_access_key",
      "sts_credentials_region"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.sts_credentials_region.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.sts_credentials_region":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.sts_credentials_region.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.ecs_container_credentials_relative_uri.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.ecs_container_credentials_relative_uri":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.ecs_container_credentials_relative_uri.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.secret_access_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.secret_access_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.secret_access_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.access_key_id.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.access_key_id":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.access_key_id.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.assume_role_arn.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.assume_role_arn":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.assume_role_arn.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.assume_role_session_name.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.assume_role_session_name":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.awsElasticsearch.endpoint.assume_role_session_name.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.ca_file.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.ca_file":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.ca_file.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec":[
      "buffer",
      "ca_file",
      "ca_path",
      "client_cert",
      "client_key",
      "format",
      "hec_token"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.client_cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.client_cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.client_cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.hec_token.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.hec_token":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.hec_token.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.ca_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.ca_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.ca_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.client_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.client_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.splunkHec.client_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.redis.password.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.redis.password":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.redis.password.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.redis":[
      "buffer",
      "format",
      "password"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.s3":[
      "assume_role_credentials",
      "aws_key_id",
      "aws_sec_key",
      "buffer",
      "compress",
      "format",
      "instance_profile_credentials",
      "shared_credentials"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.s3.aws_key_id.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.s3.aws_key_id":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.s3.aws_key_id.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.s3.aws_sec_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.s3.aws_sec_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.s3.aws_sec_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.syslog.trusted_ca_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.syslog.trusted_ca_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.syslog.trusted_ca_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.syslog":[
      "buffer",
      "format",
      "trusted_ca_path"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.oss.aaccess_key_secret.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.oss.aaccess_key_secret":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.oss.aaccess_key_secret.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.oss":[
      "aaccess_key_secret",
      "access_key_id",
      "buffer",
      "format"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.oss.access_key_id.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.oss.access_key_id":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.oss.access_key_id.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.tls_cert_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.tls_cert_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.tls_cert_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward":[
      "buffer",
      "security",
      "servers",
      "tls_cert_path",
      "tls_client_cert_path",
      "tls_client_private_key_passphrase",
      "tls_client_private_key_path"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.servers.password.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.servers.password":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.servers.password.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.servers":[
      "password",
      "shared_key",
      "username"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.servers.shared_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.servers.shared_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.servers.shared_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.servers.username.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.servers.username":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.servers.username.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.tls_client_cert_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.tls_client_cert_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.tls_client_cert_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.tls_client_private_key_passphrase.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.tls_client_private_key_passphrase":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.tls_client_private_key_passphrase.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.tls_client_private_key_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.tls_client_private_key_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.forward.tls_client_private_key_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http":[
      "auth",
      "buffer",
      "format",
      "tls_ca_cert_path",
      "tls_client_cert_path",
      "tls_private_key_passphrase",
      "tls_private_key_path"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.auth.password.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.auth.password":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.auth.password.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.auth":[
      "password",
      "username"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.auth.username.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.auth.username":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.auth.username.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.tls_private_key_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.tls_private_key_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.tls_private_key_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.tls_ca_cert_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.tls_ca_cert_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.tls_ca_cert_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.tls_private_key_passphrase.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.tls_private_key_passphrase":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.tls_private_key_passphrase.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.tls_client_cert_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.tls_client_cert_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.http.tls_client_cert_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kinesisStream":[
      "assume_role_credentials",
      "aws_key_id",
      "aws_sec_key",
      "aws_ses_token",
      "buffer",
      "format",
      "process_credentials"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kinesisStream.aws_sec_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kinesisStream.aws_sec_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kinesisStream.aws_sec_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kinesisStream.aws_ses_token.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kinesisStream.aws_ses_token":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kinesisStream.aws_ses_token.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kinesisStream.aws_key_id.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kinesisStream.aws_key_id":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kinesisStream.aws_key_id.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.ssl_client_cert_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.ssl_client_cert_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.ssl_client_cert_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka":[
      "buffer",
      "format",
      "password",
      "ssl_ca_cert",
      "ssl_client_cert",
      "ssl_client_cert_chain",
      "ssl_client_cert_key",
      "username"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.username.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.username":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.username.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.ssl_ca_cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.ssl_ca_cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.ssl_ca_cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.ssl_client_cert_chain.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.ssl_client_cert_chain":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.ssl_client_cert_chain.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.ssl_client_cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.ssl_client_cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.ssl_client_cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.password.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.password":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.kafka.password.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.azurestorage.azure_storage_account.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.azurestorage.azure_storage_account":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.azurestorage.azure_storage_account.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.azurestorage":[
      "azure_storage_access_key",
      "azure_storage_account",
      "azure_storage_sas_token",
      "buffer"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.azurestorage.azure_storage_sas_token.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.azurestorage.azure_storage_sas_token":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.azurestorage.azure_storage_sas_token.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.azurestorage.azure_storage_access_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.azurestorage.azure_storage_access_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.azurestorage.azure_storage_access_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.datadog":[
      "api_key",
      "buffer"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.datadog.api_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.datadog.api_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.datadog.api_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.file":[
      "buffer",
      "format"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.logdna":[
      "buffer"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.gcs":[
      "buffer",
      "credentials_json",
      "format",
      "object_metadata"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.gcs.credentials_json.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.gcs.credentials_json":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.gcs.credentials_json.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.sumologic":[
      "buffer",
      "endpoint"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.sumologic.endpoint.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.sumologic.endpoint":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.sumologic.endpoint.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki":[
      "buffer",
      "ca_cert",
      "cert",
      "key",
      "password",
      "username"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.username.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.username":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.username.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.ca_cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.ca_cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.ca_cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.password.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.password":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.loki.password.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.cloudwatch.aws_key_id.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.cloudwatch.aws_key_id":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.cloudwatch.aws_key_id.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.cloudwatch":[
      "aws_key_id",
      "aws_sec_key",
      "buffer",
      "format"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.cloudwatch.aws_sec_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.cloudwatch.aws_sec_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.cloudwatch.aws_sec_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.newrelic.api_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.newrelic.api_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.newrelic.api_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.newrelic":[
      "api_key",
      "license_key"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.newrelic.license_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.newrelic.license_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.output.spec.newrelic.license_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.output":[
      "spec",
      "status"
   ],
   "rke-machine.cattle.io.v1.amazonec2machine.spec.common":[
      "taints"
   ],
   "rke-machine.cattle.io.v1.amazonec2machine.spec":[
      "common"
   ],
   "rke-machine.cattle.io.v1.amazonec2machine":[
      "spec",
      "status"
   ],
   "rke-machine.cattle.io.v1.amazonec2machine.status":[
      "addresses",
      "conditions"
   ],
   "project.cattle.io":[
      "app",
      "apprevision",
      "pipeline",
      "pipelineexecution",
      "pipelinesetting",
      "sourcecodecredential",
      "sourcecodeproviderconfig",
      "sourcecoderepository"
   ],
   "rke-machine.cattle.io.v1.harvestermachine.spec.common":[
      "taints"
   ],
   "rke-machine.cattle.io.v1.harvestermachine.spec":[
      "common"
   ],
   "rke-machine.cattle.io.v1.harvestermachine":[
      "spec",
      "status"
   ],
   "rke-machine.cattle.io.v1.harvestermachine.status":[
      "addresses",
      "conditions"
   ],
   "io.k8s.api.certificates.v1":[
      "certificatesigningrequestcondition",
      "certificatesigningrequestspec",
      "certificatesigningrequeststatus"
   ],
   "certificates.k8s.io":[
      "certificatesigningrequest"
   ],
   "io.k8s.api.apps.v1":[
      "daemonsetcondition",
      "daemonsetspec",
      "daemonsetstatus",
      "daemonsetupdatestrategy",
      "deploymentcondition",
      "deploymentspec",
      "deploymentstatus",
      "deploymentstrategy",
      "replicasetcondition",
      "replicasetspec",
      "replicasetstatus",
      "rollingupdatedaemonset",
      "rollingupdatedeployment",
      "rollingupdatestatefulsetstrategy",
      "statefulsetcondition",
      "statefulsetspec",
      "statefulsetstatus",
      "statefulsetupdatestrategy"
   ],
   "install.istio.io":[
      "istiooperator"
   ],
   "helm.cattle.io":[
      "helmchart",
      "helmchartconfig"
   ],
   "io.k8s.api.autoscaling.v2beta2":[
      "containerresourcemetricsource",
      "containerresourcemetricstatus",
      "crossversionobjectreference",
      "externalmetricsource",
      "externalmetricstatus",
      "horizontalpodautoscalerbehavior",
      "horizontalpodautoscalercondition",
      "horizontalpodautoscalerspec",
      "horizontalpodautoscalerstatus",
      "hpascalingpolicy",
      "hpascalingrules",
      "metricidentifier",
      "metricspec",
      "metricstatus",
      "metrictarget",
      "metricvaluestatus",
      "objectmetricsource",
      "objectmetricstatus",
      "podsmetricsource",
      "podsmetricstatus",
      "resourcemetricsource",
      "resourcemetricstatus"
   ],
   "autoscaling":[
      "horizontalpodautoscaler"
   ],
   "fleet.cattle.io.v1alpha1.clustergroup.status":[
      "conditions",
      "display",
      "resourcecounts",
      "summary"
   ],
   "fleet.cattle.io.v1alpha1.clustergroup.status.summary.nonReadyResources.nonReadyStatus":[
      "summary"
   ],
   "fleet.cattle.io.v1alpha1.clustergroup.status.summary.nonReadyResources":[
      "modifiedstatus",
      "nonreadystatus"
   ],
   "fleet.cattle.io.v1alpha1.clustergroup.status.summary":[
      "nonreadyresources"
   ],
   "fleet.cattle.io.v1alpha1.clustergroup":[
      "spec",
      "status"
   ],
   "fleet.cattle.io.v1alpha1.clustergroup.spec.selector":[
      "matchexpressions"
   ],
   "fleet.cattle.io.v1alpha1.clustergroup.spec":[
      "selector"
   ],
   "io.k8s.api.events.v1":[
      "eventseries"
   ],
   "events.k8s.io":[
      "event"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters":[
      "concat",
      "dedot",
      "detectexceptions",
      "enhancek8s",
      "geoip",
      "grep",
      "kube_events_timestamp",
      "parser",
      "prometheus",
      "record_modifier",
      "record_transformer",
      "stdout",
      "sumologic",
      "tag_normaliser",
      "throttle"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.grep.or":[
      "exclude",
      "regexp"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.grep":[
      "and",
      "exclude",
      "or",
      "regexp"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.grep.and":[
      "exclude",
      "regexp"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.record_transformer":[
      "records"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.prometheus":[
      "metrics"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.record_modifier":[
      "records",
      "replaces"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.enhanceK8s.client_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.enhanceK8s.client_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.enhanceK8s.client_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.enhanceK8s":[
      "ca_file",
      "client_cert",
      "client_key"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.enhanceK8s.ca_file.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.enhanceK8s.ca_file":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.enhanceK8s.ca_file.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.enhanceK8s.client_cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.enhanceK8s.client_cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.enhanceK8s.client_cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.geoip":[
      "records"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.parser.parsers":[
      "patterns"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.parser":[
      "parse",
      "parsers"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.filters.parser.parse":[
      "patterns"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec":[
      "filters",
      "match"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow.spec.match":[
      "exclude",
      "select"
   ],
   "logging.banzaicloud.io.v1beta1.clusterflow":[
      "spec",
      "status"
   ],
   "rke.cattle.io.v1.custommachine":[
      "spec",
      "status"
   ],
   "rke.cattle.io.v1.custommachine.status":[
      "addresses",
      "conditions"
   ],
   "cluster.x-k8s.io.v1beta1.machinedeployment.spec.strategy":[
      "rollingupdate"
   ],
   "cluster.x-k8s.io.v1beta1.machinedeployment.spec":[
      "selector",
      "strategy",
      "template"
   ],
   "cluster.x-k8s.io.v1beta1.machinedeployment.spec.selector":[
      "matchexpressions"
   ],
   "cluster.x-k8s.io.v1beta1.machinedeployment.spec.template.spec.bootstrap":[
      "configref"
   ],
   "cluster.x-k8s.io.v1beta1.machinedeployment.spec.template.spec":[
      "bootstrap",
      "infrastructureref"
   ],
   "cluster.x-k8s.io.v1beta1.machinedeployment.spec.template":[
      "metadata",
      "spec"
   ],
   "cluster.x-k8s.io.v1beta1.machinedeployment.spec.template.metadata":[
      "ownerreferences"
   ],
   "cluster.x-k8s.io.v1beta1.machinedeployment":[
      "spec",
      "status"
   ],
   "management.cattle.io.v3.clusterregistrationtoken":[
      "spec",
      "status"
   ],
   "io.k8s.api.rbac.v1":[
      "aggregationrule",
      "policyrule",
      "roleref",
      "subject"
   ],
   "rbac.authorization.k8s.io":[
      "clusterrole",
      "clusterrolebinding",
      "role",
      "rolebinding"
   ],
   "management.cattle.io.v3.managedchart.spec.targets":[
      "clustergroupselector",
      "clusterselector",
      "diff",
      "helm",
      "kustomize",
      "yaml"
   ],
   "management.cattle.io.v3.managedchart.spec.targets.clusterSelector":[
      "matchexpressions"
   ],
   "management.cattle.io.v3.managedchart.spec.targets.diff.comparePatches":[
      "operations"
   ],
   "management.cattle.io.v3.managedchart.spec.targets.diff":[
      "comparepatches"
   ],
   "management.cattle.io.v3.managedchart.spec.targets.clusterGroupSelector":[
      "matchexpressions"
   ],
   "management.cattle.io.v3.managedchart.spec.targets.helm":[
      "values",
      "valuesfrom"
   ],
   "management.cattle.io.v3.managedchart.spec.targets.helm.valuesFrom":[
      "configmapkeyref",
      "secretkeyref"
   ],
   "management.cattle.io.v3.managedchart.spec":[
      "diff",
      "rolloutstrategy",
      "targets",
      "values"
   ],
   "management.cattle.io.v3.managedchart.spec.diff.comparePatches":[
      "operations"
   ],
   "management.cattle.io.v3.managedchart.spec.diff":[
      "comparepatches"
   ],
   "management.cattle.io.v3.managedchart.spec.rolloutStrategy.partitions.clusterGroupSelector":[
      "matchexpressions"
   ],
   "management.cattle.io.v3.managedchart.spec.rolloutStrategy.partitions":[
      "clustergroupselector",
      "clusterselector"
   ],
   "management.cattle.io.v3.managedchart.spec.rolloutStrategy.partitions.clusterSelector":[
      "matchexpressions"
   ],
   "management.cattle.io.v3.managedchart.spec.rolloutStrategy":[
      "partitions"
   ],
   "management.cattle.io.v3.managedchart":[
      "spec",
      "status"
   ],
   "management.cattle.io.v3.managedchart.status.summary.nonReadyResources.nonReadyStatus":[
      "summary"
   ],
   "management.cattle.io.v3.managedchart.status.summary.nonReadyResources":[
      "modifiedstatus",
      "nonreadystatus"
   ],
   "management.cattle.io.v3.managedchart.status.summary":[
      "nonreadyresources"
   ],
   "management.cattle.io.v3.managedchart.status":[
      "conditions",
      "display",
      "partitions",
      "resourcekey",
      "summary"
   ],
   "management.cattle.io.v3.managedchart.status.partitions.summary.nonReadyResources":[
      "modifiedstatus",
      "nonreadystatus"
   ],
   "management.cattle.io.v3.managedchart.status.partitions.summary.nonReadyResources.nonReadyStatus":[
      "summary"
   ],
   "management.cattle.io.v3.managedchart.status.partitions.summary":[
      "nonreadyresources"
   ],
   "management.cattle.io.v3.managedchart.status.partitions":[
      "summary"
   ],
   "rke-machine.cattle.io.v1.amazonec2machinetemplate.spec.template.spec.common":[
      "taints"
   ],
   "rke-machine.cattle.io.v1.amazonec2machinetemplate.spec.template.spec":[
      "common"
   ],
   "rke-machine.cattle.io.v1.amazonec2machinetemplate.spec.template":[
      "spec"
   ],
   "rke-machine.cattle.io.v1.amazonec2machinetemplate.spec":[
      "template"
   ],
   "rke-machine.cattle.io.v1.amazonec2machinetemplate":[
      "spec"
   ],
   "io.k8s.api.node.v1":[
      "overhead",
      "scheduling"
   ],
   "node.k8s.io":[
      "runtimeclass"
   ],
   "resources.cattle.io.v1.restore.spec.storageLocation":[
      "s3"
   ],
   "resources.cattle.io.v1.restore.spec":[
      "storagelocation"
   ],
   "resources.cattle.io.v1.restore":[
      "spec",
      "status"
   ],
   "resources.cattle.io.v1.restore.status":[
      "conditions"
   ],
   "management.cattle.io.v3.feature":[
      "spec",
      "status"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.subsets.trafficPolicy":[
      "connectionpool",
      "loadbalancer",
      "outlierdetection",
      "portlevelsettings",
      "tls"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.subsets.trafficPolicy.connectionPool":[
      "http",
      "tcp"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.subsets.trafficPolicy.connectionPool.tcp":[
      "tcpkeepalive"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.subsets.trafficPolicy.loadBalancer.consistentHash":[
      "httpcookie"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.subsets.trafficPolicy.loadBalancer":[
      "consistenthash",
      "localitylbsetting"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.subsets.trafficPolicy.loadBalancer.localityLbSetting":[
      "distribute",
      "failover"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp":[
      "tcpkeepalive"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.subsets.trafficPolicy.portLevelSettings.connectionPool":[
      "http",
      "tcp"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.subsets.trafficPolicy.portLevelSettings":[
      "connectionpool",
      "loadbalancer",
      "outlierdetection",
      "port",
      "tls"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash":[
      "httpcookie"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.subsets.trafficPolicy.portLevelSettings.loadBalancer":[
      "consistenthash",
      "localitylbsetting"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting":[
      "distribute",
      "failover"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.subsets":[
      "trafficpolicy"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec":[
      "subsets",
      "trafficpolicy"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.trafficPolicy.connectionPool":[
      "http",
      "tcp"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.trafficPolicy.connectionPool.tcp":[
      "tcpkeepalive"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.trafficPolicy":[
      "connectionpool",
      "loadbalancer",
      "outlierdetection",
      "portlevelsettings",
      "tls"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.trafficPolicy.loadBalancer.localityLbSetting":[
      "distribute",
      "failover"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.trafficPolicy.loadBalancer":[
      "consistenthash",
      "localitylbsetting"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.trafficPolicy.loadBalancer.consistentHash":[
      "httpcookie"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.trafficPolicy.portLevelSettings":[
      "connectionpool",
      "loadbalancer",
      "outlierdetection",
      "port",
      "tls"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.trafficPolicy.portLevelSettings.connectionPool":[
      "http",
      "tcp"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.trafficPolicy.portLevelSettings.connectionPool.tcp":[
      "tcpkeepalive"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash":[
      "httpcookie"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.trafficPolicy.portLevelSettings.loadBalancer":[
      "consistenthash",
      "localitylbsetting"
   ],
   "networking.istio.io.v1beta1.destinationrule.spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting":[
      "distribute",
      "failover"
   ],
   "networking.istio.io.v1beta1.destinationrule":[
      "spec",
      "status"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.inhibitRules":[
      "sourcematch",
      "targetmatch"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec":[
      "inhibitrules",
      "receivers",
      "route"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.victoropsConfigs":[
      "apikey",
      "customfields",
      "httpconfig"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.victoropsConfigs.httpConfig.basicAuth":[
      "password",
      "username"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.victoropsConfigs.httpConfig":[
      "basicauth",
      "bearertokensecret",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.victoropsConfigs.httpConfig.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.victoropsConfigs.httpConfig.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.victoropsConfigs.httpConfig.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers":[
      "emailconfigs",
      "opsgenieconfigs",
      "pagerdutyconfigs",
      "pushoverconfigs",
      "slackconfigs",
      "victoropsconfigs",
      "webhookconfigs",
      "wechatconfigs"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.webhookConfigs.httpConfig.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.webhookConfigs.httpConfig.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.webhookConfigs.httpConfig.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.webhookConfigs.httpConfig":[
      "basicauth",
      "bearertokensecret",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.webhookConfigs.httpConfig.basicAuth":[
      "password",
      "username"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.webhookConfigs":[
      "httpconfig",
      "urlsecret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.emailConfigs":[
      "authpassword",
      "authsecret",
      "headers",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.emailConfigs.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.emailConfigs.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.emailConfigs.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.pushoverConfigs":[
      "httpconfig",
      "token",
      "userkey"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.pushoverConfigs.httpConfig":[
      "basicauth",
      "bearertokensecret",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.pushoverConfigs.httpConfig.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.pushoverConfigs.httpConfig.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.pushoverConfigs.httpConfig.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.pushoverConfigs.httpConfig.basicAuth":[
      "password",
      "username"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.opsgenieConfigs":[
      "apikey",
      "details",
      "httpconfig",
      "responders"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.opsgenieConfigs.httpConfig.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.opsgenieConfigs.httpConfig.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.opsgenieConfigs.httpConfig.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.opsgenieConfigs.httpConfig":[
      "basicauth",
      "bearertokensecret",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.opsgenieConfigs.httpConfig.basicAuth":[
      "password",
      "username"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.pagerdutyConfigs":[
      "details",
      "httpconfig",
      "routingkey",
      "servicekey"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.pagerdutyConfigs.httpConfig":[
      "basicauth",
      "bearertokensecret",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.pagerdutyConfigs.httpConfig.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.pagerdutyConfigs.httpConfig.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.pagerdutyConfigs.httpConfig.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.pagerdutyConfigs.httpConfig.basicAuth":[
      "password",
      "username"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.slackConfigs":[
      "actions",
      "apiurl",
      "fields",
      "httpconfig"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.slackConfigs.actions":[
      "confirm"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.slackConfigs.httpConfig.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.slackConfigs.httpConfig.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.slackConfigs.httpConfig.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.slackConfigs.httpConfig":[
      "basicauth",
      "bearertokensecret",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.slackConfigs.httpConfig.basicAuth":[
      "password",
      "username"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.wechatConfigs.httpConfig.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.wechatConfigs.httpConfig.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.wechatConfigs.httpConfig.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.wechatConfigs.httpConfig":[
      "basicauth",
      "bearertokensecret",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.wechatConfigs.httpConfig.basicAuth":[
      "password",
      "username"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.receivers.wechatConfigs":[
      "apisecret",
      "httpconfig"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig.spec.route":[
      "matchers"
   ],
   "monitoring.coreos.com.v1alpha1.alertmanagerconfig":[
      "spec"
   ],
   "status.gatekeeper.sh.v1beta1.constraintpodstatus.status":[
      "errors"
   ],
   "status.gatekeeper.sh.v1beta1.constraintpodstatus":[
      "status"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteWrite":[
      "authorization",
      "basicauth",
      "metadataconfig",
      "oauth2",
      "queueconfig",
      "tlsconfig",
      "writerelabelconfigs"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteWrite.oauth2.clientId":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteWrite.oauth2":[
      "clientid",
      "clientsecret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteWrite.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteWrite.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteWrite.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteWrite.basicAuth":[
      "password",
      "username"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteWrite.authorization":[
      "credentials"
   ],
   "monitoring.coreos.com.v1.prometheus.spec":[
      "additionalalertmanagerconfigs",
      "additionalalertrelabelconfigs",
      "additionalscrapeconfigs",
      "affinity",
      "alerting",
      "apiserverconfig",
      "arbitraryfsaccessthroughsms",
      "containers",
      "imagepullsecrets",
      "initcontainers",
      "podmetadata",
      "podmonitornamespaceselector",
      "podmonitorselector",
      "probenamespaceselector",
      "probeselector",
      "prometheusrulesexcludedfromenforce",
      "query",
      "remoteread",
      "remotewrite",
      "resources",
      "rulenamespaceselector",
      "rules",
      "ruleselector",
      "securitycontext",
      "servicemonitornamespaceselector",
      "servicemonitorselector",
      "storage",
      "thanos",
      "tolerations",
      "topologyspreadconstraints",
      "volumemounts",
      "volumes",
      "web"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.probeSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteRead.authorization":[
      "credentials"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteRead":[
      "authorization",
      "basicauth",
      "oauth2",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteRead.oauth2.clientId":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteRead.oauth2":[
      "clientid",
      "clientsecret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteRead.basicAuth":[
      "password",
      "username"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteRead.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteRead.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.remoteRead.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.securityContext":[
      "capabilities",
      "selinuxoptions",
      "windowsoptions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers":[
      "env",
      "envfrom",
      "lifecycle",
      "livenessprobe",
      "ports",
      "readinessprobe",
      "resources",
      "securitycontext",
      "startupprobe",
      "volumedevices",
      "volumemounts"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.lifecycle.postStart":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.lifecycle.postStart.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.lifecycle":[
      "poststart",
      "prestop"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.lifecycle.preStop":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.lifecycle.preStop.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.livenessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.livenessProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.startupProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.startupProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.envFrom":[
      "configmapref",
      "secretref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.readinessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.readinessProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.env.valueFrom":[
      "configmapkeyref",
      "fieldref",
      "resourcefieldref",
      "secretkeyref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.initContainers.env":[
      "valuefrom"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.serviceMonitorSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.thanos":[
      "grpcservertlsconfig",
      "objectstorageconfig",
      "resources",
      "tracingconfig"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.thanos.grpcServerTlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.thanos.grpcServerTlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.thanos.grpcServerTlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.serviceMonitorNamespaceSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.ruleSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.podMonitorSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.web.tlsConfig":[
      "cert",
      "client_ca",
      "keysecret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.web.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.web.tlsConfig.client_ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.web":[
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.lifecycle.preStop":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.lifecycle.preStop.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.lifecycle":[
      "poststart",
      "prestop"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.lifecycle.postStart":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.lifecycle.postStart.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers":[
      "env",
      "envfrom",
      "lifecycle",
      "livenessprobe",
      "ports",
      "readinessprobe",
      "resources",
      "securitycontext",
      "startupprobe",
      "volumedevices",
      "volumemounts"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.livenessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.livenessProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.securityContext":[
      "capabilities",
      "selinuxoptions",
      "windowsoptions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.readinessProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.readinessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.startupProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.startupProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.env.valueFrom":[
      "configmapkeyref",
      "fieldref",
      "resourcefieldref",
      "secretkeyref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.env":[
      "valuefrom"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.containers.envFrom":[
      "configmapref",
      "secretref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.ruleNamespaceSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.alerting.alertmanagers.authorization":[
      "credentials"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.alerting.alertmanagers":[
      "authorization",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.alerting.alertmanagers.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.alerting.alertmanagers.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.alerting.alertmanagers.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.alerting":[
      "alertmanagers"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.securityContext":[
      "selinuxoptions",
      "sysctls",
      "windowsoptions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.apiserverConfig.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.apiserverConfig.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.apiserverConfig.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.apiserverConfig":[
      "authorization",
      "basicauth",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.apiserverConfig.authorization":[
      "credentials"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.apiserverConfig.basicAuth":[
      "password",
      "username"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.podMonitorNamespaceSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.storage":[
      "emptydir",
      "volumeclaimtemplate"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.storage.volumeClaimTemplate":[
      "metadata",
      "spec",
      "status"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.storage.volumeClaimTemplate.spec.selector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.storage.volumeClaimTemplate.spec":[
      "datasource",
      "resources",
      "selector"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.storage.volumeClaimTemplate.status":[
      "conditions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution":[
      "podaffinityterm"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.podAffinity":[
      "preferredduringschedulingignoredduringexecution",
      "requiredduringschedulingignoredduringexecution"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity":[
      "nodeaffinity",
      "podaffinity",
      "podantiaffinity"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution":[
      "podaffinityterm"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.podAntiAffinity":[
      "preferredduringschedulingignoredduringexecution",
      "requiredduringschedulingignoredduringexecution"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference":[
      "matchexpressions",
      "matchfields"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution":[
      "preference"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.nodeAffinity":[
      "preferredduringschedulingignoredduringexecution",
      "requiredduringschedulingignoredduringexecution"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms":[
      "matchexpressions",
      "matchfields"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution":[
      "nodeselectorterms"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.probeNamespaceSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.rules":[
      "alert"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.cinder":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes":[
      "awselasticblockstore",
      "azuredisk",
      "azurefile",
      "cephfs",
      "cinder",
      "configmap",
      "csi",
      "downwardapi",
      "emptydir",
      "fc",
      "flexvolume",
      "flocker",
      "gcepersistentdisk",
      "gitrepo",
      "glusterfs",
      "hostpath",
      "iscsi",
      "nfs",
      "persistentvolumeclaim",
      "photonpersistentdisk",
      "portworxvolume",
      "projected",
      "quobyte",
      "rbd",
      "scaleio",
      "secret",
      "storageos",
      "vspherevolume"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.rbd":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.iscsi":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.cephfs":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.projected.sources.secret":[
      "items"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.projected.sources":[
      "configmap",
      "downwardapi",
      "secret",
      "serviceaccounttoken"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.projected.sources.configMap":[
      "items"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.projected.sources.downwardAPI.items":[
      "fieldref",
      "resourcefieldref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.projected.sources.downwardAPI":[
      "items"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.projected":[
      "sources"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.secret":[
      "items"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.csi":[
      "nodepublishsecretref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.downwardAPI.items":[
      "fieldref",
      "resourcefieldref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.downwardAPI":[
      "items"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.storageos":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.configMap":[
      "items"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.flexVolume":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.volumes.scaleIO":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.topologySpreadConstraints.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.prometheus.spec.topologySpreadConstraints":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.prometheus":[
      "spec",
      "status"
   ],
   "networking.istio.io.v1beta1.workloadentry":[
      "spec",
      "status"
   ],
   "k3s.cattle.io":[
      "addon"
   ],
   "scheduling.k8s.io":[
      "priorityclass"
   ],
   "rke.cattle.io.v1.rkebootstraptemplate.spec.template":[
      "spec",
      "status"
   ],
   "rke.cattle.io.v1.rkebootstraptemplate.spec":[
      "template"
   ],
   "rke.cattle.io.v1.rkebootstraptemplate":[
      "spec"
   ],
   "cluster.x-k8s.io.v1beta1.machine.spec.bootstrap":[
      "configref"
   ],
   "cluster.x-k8s.io.v1beta1.machine.spec":[
      "bootstrap",
      "infrastructureref"
   ],
   "cluster.x-k8s.io.v1beta1.machine":[
      "spec",
      "status"
   ],
   "cluster.x-k8s.io.v1beta1.machine.status":[
      "addresses",
      "conditions",
      "noderef"
   ],
   "management.cattle.io.v3.apiservice":[
      "spec",
      "status"
   ],
   "io.k8s.api.discovery.v1":[
      "endpoint",
      "endpointconditions",
      "endpointhints",
      "endpointport",
      "forzone"
   ],
   "discovery.k8s.io":[
      "endpointslice"
   ],
   "io.k8s.api.policy.v1":[
      "poddisruptionbudgetspec",
      "poddisruptionbudgetstatus"
   ],
   "policy":[
      "poddisruptionbudget",
      "podsecuritypolicy"
   ],
   "config.gatekeeper.sh.v1alpha1.config.spec":[
      "match",
      "readiness",
      "sync",
      "validation"
   ],
   "config.gatekeeper.sh.v1alpha1.config.spec.sync":[
      "synconly"
   ],
   "config.gatekeeper.sh.v1alpha1.config.spec.validation.traces":[
      "kind"
   ],
   "config.gatekeeper.sh.v1alpha1.config.spec.validation":[
      "traces"
   ],
   "config.gatekeeper.sh.v1alpha1.config":[
      "spec",
      "status"
   ],
   "config.gatekeeper.sh":[
      "config"
   ],
   "fleet.cattle.io.v1alpha1.clusterregistrationtoken":[
      "spec",
      "status"
   ],
   "rke-machine.cattle.io.v1.vmwarevspheremachine.spec.common":[
      "taints"
   ],
   "rke-machine.cattle.io.v1.vmwarevspheremachine.spec":[
      "common"
   ],
   "rke-machine.cattle.io.v1.vmwarevspheremachine":[
      "spec",
      "status"
   ],
   "rke-machine.cattle.io.v1.vmwarevspheremachine.status":[
      "addresses",
      "conditions"
   ],
   "rke-machine.cattle.io.v1.azuremachinetemplate.spec.template.spec.common":[
      "taints"
   ],
   "rke-machine.cattle.io.v1.azuremachinetemplate.spec.template.spec":[
      "common"
   ],
   "rke-machine.cattle.io.v1.azuremachinetemplate.spec.template":[
      "spec"
   ],
   "rke-machine.cattle.io.v1.azuremachinetemplate.spec":[
      "template"
   ],
   "rke-machine.cattle.io.v1.azuremachinetemplate":[
      "spec"
   ],
   "cluster.x-k8s.io.v1beta1.machineset":[
      "spec",
      "status"
   ],
   "cluster.x-k8s.io.v1beta1.machineset.spec.selector":[
      "matchexpressions"
   ],
   "cluster.x-k8s.io.v1beta1.machineset.spec":[
      "selector",
      "template"
   ],
   "cluster.x-k8s.io.v1beta1.machineset.spec.template.metadata":[
      "ownerreferences"
   ],
   "cluster.x-k8s.io.v1beta1.machineset.spec.template":[
      "metadata",
      "spec"
   ],
   "cluster.x-k8s.io.v1beta1.machineset.spec.template.spec.bootstrap":[
      "configref"
   ],
   "cluster.x-k8s.io.v1beta1.machineset.spec.template.spec":[
      "bootstrap",
      "infrastructureref"
   ],
   "rke-machine.cattle.io.v1.linodemachine.spec.common":[
      "taints"
   ],
   "rke-machine.cattle.io.v1.linodemachine.spec":[
      "common"
   ],
   "rke-machine.cattle.io.v1.linodemachine":[
      "spec",
      "status"
   ],
   "rke-machine.cattle.io.v1.linodemachine.status":[
      "addresses",
      "conditions"
   ],
   "security.istio.io.v1beta1.requestauthentication.spec.jwtRules":[
      "fromheaders"
   ],
   "security.istio.io.v1beta1.requestauthentication.spec":[
      "jwtrules",
      "selector"
   ],
   "security.istio.io.v1beta1.requestauthentication":[
      "spec",
      "status"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.http.fault.abort":[
      "percentage"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.http.fault":[
      "abort",
      "delay"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.http.fault.delay":[
      "percentage"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.http":[
      "corspolicy",
      "delegate",
      "fault",
      "headers",
      "match",
      "mirror",
      "mirrorpercentage",
      "redirect",
      "retries",
      "rewrite",
      "route"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.http.match":[
      "authority",
      "headers",
      "method",
      "queryparams",
      "scheme",
      "uri",
      "withoutheaders"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.http.corsPolicy":[
      "alloworigins"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.http.mirror":[
      "port"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.http.headers":[
      "request",
      "response"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.http.route.destination":[
      "port"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.http.route":[
      "destination",
      "headers"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.http.route.headers":[
      "request",
      "response"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec":[
      "http",
      "tcp",
      "tls"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.tcp":[
      "match",
      "route"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.tcp.route.destination":[
      "port"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.tcp.route":[
      "destination"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.tls.route.destination":[
      "port"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.tls.route":[
      "destination"
   ],
   "networking.istio.io.v1beta1.virtualservice.spec.tls":[
      "match",
      "route"
   ],
   "networking.istio.io.v1beta1.virtualservice":[
      "spec",
      "status"
   ],
   "networking.istio.io.v1alpha3.workloadgroup":[
      "spec",
      "status"
   ],
   "networking.istio.io.v1alpha3.workloadgroup.spec":[
      "metadata",
      "probe",
      "template"
   ],
   "networking.istio.io.v1alpha3.workloadgroup.spec.probe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "networking.istio.io.v1alpha3.workloadgroup.spec.probe.httpGet":[
      "httpheaders"
   ],
   "cluster.x-k8s.io.v1beta1.machinehealthcheck.status":[
      "conditions"
   ],
   "cluster.x-k8s.io.v1beta1.machinehealthcheck":[
      "spec",
      "status"
   ],
   "cluster.x-k8s.io.v1beta1.machinehealthcheck.spec":[
      "remediationtemplate",
      "selector",
      "unhealthyconditions"
   ],
   "cluster.x-k8s.io.v1beta1.machinehealthcheck.spec.selector":[
      "matchexpressions"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput":[
      "spec",
      "status"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.sqs.aws_key_id.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.sqs.aws_key_id":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.sqs.aws_key_id.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.sqs":[
      "aws_key_id",
      "aws_sec_key",
      "buffer"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.sqs.aws_sec_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.sqs.aws_sec_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.sqs.aws_sec_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec":[
      "awselasticsearch",
      "azurestorage",
      "cloudwatch",
      "datadog",
      "elasticsearch",
      "file",
      "forward",
      "gcs",
      "gelf",
      "http",
      "kafka",
      "kinesisstream",
      "logdna",
      "logz",
      "loki",
      "newrelic",
      "nullout",
      "oss",
      "redis",
      "s3",
      "splunkhec",
      "sqs",
      "sumologic",
      "syslog"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.logdna":[
      "buffer"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.s3":[
      "assume_role_credentials",
      "aws_key_id",
      "aws_sec_key",
      "buffer",
      "compress",
      "format",
      "instance_profile_credentials",
      "shared_credentials"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.s3.aws_sec_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.s3.aws_sec_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.s3.aws_sec_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.s3.aws_key_id.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.s3.aws_key_id":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.s3.aws_key_id.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kinesisStream.aws_sec_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kinesisStream.aws_sec_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kinesisStream.aws_sec_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kinesisStream":[
      "assume_role_credentials",
      "aws_key_id",
      "aws_sec_key",
      "aws_ses_token",
      "buffer",
      "format",
      "process_credentials"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kinesisStream.aws_ses_token.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kinesisStream.aws_ses_token":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kinesisStream.aws_ses_token.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kinesisStream.aws_key_id.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kinesisStream.aws_key_id":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kinesisStream.aws_key_id.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.oss":[
      "aaccess_key_secret",
      "access_key_id",
      "buffer",
      "format"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.oss.aaccess_key_secret.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.oss.aaccess_key_secret":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.oss.aaccess_key_secret.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.oss.access_key_id.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.oss.access_key_id":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.oss.access_key_id.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.datadog":[
      "api_key",
      "buffer"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.datadog.api_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.datadog.api_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.datadog.api_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki":[
      "buffer",
      "ca_cert",
      "cert",
      "key",
      "password",
      "username"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.ca_cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.ca_cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.ca_cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.username.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.username":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.username.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.password.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.password":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.loki.password.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.cloudwatch.aws_sec_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.cloudwatch.aws_sec_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.cloudwatch.aws_sec_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.cloudwatch":[
      "aws_key_id",
      "aws_sec_key",
      "buffer",
      "format"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.cloudwatch.aws_key_id.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.cloudwatch.aws_key_id":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.cloudwatch.aws_key_id.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.sumologic":[
      "buffer",
      "endpoint"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.sumologic.endpoint.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.sumologic.endpoint":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.sumologic.endpoint.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.azurestorage.azure_storage_account.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.azurestorage.azure_storage_account":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.azurestorage.azure_storage_account.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.azurestorage":[
      "azure_storage_access_key",
      "azure_storage_account",
      "azure_storage_sas_token",
      "buffer"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.azurestorage.azure_storage_sas_token.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.azurestorage.azure_storage_sas_token":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.azurestorage.azure_storage_sas_token.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.azurestorage.azure_storage_access_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.azurestorage.azure_storage_access_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.azurestorage.azure_storage_access_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.gcs.credentials_json.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.gcs.credentials_json":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.gcs.credentials_json.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.gcs":[
      "buffer",
      "credentials_json",
      "format",
      "object_metadata"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch":[
      "buffer",
      "endpoint",
      "format"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.secret_access_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.secret_access_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.secret_access_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint":[
      "access_key_id",
      "assume_role_arn",
      "assume_role_session_name",
      "assume_role_web_identity_token_file",
      "ecs_container_credentials_relative_uri",
      "secret_access_key",
      "sts_credentials_region"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.access_key_id.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.access_key_id":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.access_key_id.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.assume_role_session_name.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.assume_role_session_name":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.assume_role_session_name.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.sts_credentials_region.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.sts_credentials_region":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.sts_credentials_region.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.assume_role_arn.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.assume_role_arn":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.assume_role_arn.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.ecs_container_credentials_relative_uri.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.ecs_container_credentials_relative_uri":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.ecs_container_credentials_relative_uri.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.assume_role_web_identity_token_file.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.assume_role_web_identity_token_file":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.awsElasticsearch.endpoint.assume_role_web_identity_token_file.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.redis.password.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.redis.password":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.redis.password.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.redis":[
      "buffer",
      "format",
      "password"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.logz":[
      "buffer",
      "endpoint"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.logz.endpoint.token.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.logz.endpoint.token":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.logz.endpoint.token.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.logz.endpoint":[
      "token"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.newrelic.license_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.newrelic.license_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.newrelic.license_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.newrelic":[
      "api_key",
      "license_key"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.newrelic.api_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.newrelic.api_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.newrelic.api_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch":[
      "api_key",
      "buffer",
      "ca_file",
      "client_cert",
      "client_key",
      "client_key_pass",
      "password",
      "template_file"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.client_cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.client_cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.client_cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.template_file.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.template_file":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.template_file.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.client_key_pass.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.client_key_pass":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.client_key_pass.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.api_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.api_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.api_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.password.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.password":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.password.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.ca_file.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.ca_file":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.ca_file.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.client_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.client_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.elasticsearch.client_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec":[
      "buffer",
      "ca_file",
      "ca_path",
      "client_cert",
      "client_key",
      "format",
      "hec_token"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.client_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.client_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.client_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.hec_token.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.hec_token":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.hec_token.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.ca_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.ca_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.ca_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.client_cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.client_cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.client_cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.ca_file.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.ca_file":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.splunkHec.ca_file.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.syslog.trusted_ca_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.syslog.trusted_ca_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.syslog.trusted_ca_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.syslog":[
      "buffer",
      "format",
      "trusted_ca_path"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.file":[
      "buffer",
      "format"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka":[
      "buffer",
      "format",
      "password",
      "ssl_ca_cert",
      "ssl_client_cert",
      "ssl_client_cert_chain",
      "ssl_client_cert_key",
      "username"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.password.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.password":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.password.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.ssl_ca_cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.ssl_ca_cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.ssl_ca_cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.ssl_client_cert_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.ssl_client_cert_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.ssl_client_cert_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.ssl_client_cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.ssl_client_cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.ssl_client_cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.ssl_client_cert_chain.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.ssl_client_cert_chain":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.ssl_client_cert_chain.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.username.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.username":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.kafka.username.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.tls_client_cert_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.tls_client_cert_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.tls_client_cert_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward":[
      "buffer",
      "security",
      "servers",
      "tls_cert_path",
      "tls_client_cert_path",
      "tls_client_private_key_passphrase",
      "tls_client_private_key_path"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.tls_client_private_key_passphrase.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.tls_client_private_key_passphrase":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.tls_client_private_key_passphrase.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.servers.shared_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.servers.shared_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.servers.shared_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.servers":[
      "password",
      "shared_key",
      "username"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.servers.username.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.servers.username":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.servers.username.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.servers.password.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.servers.password":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.servers.password.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.tls_cert_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.tls_cert_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.tls_cert_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.tls_client_private_key_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.tls_client_private_key_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.forward.tls_client_private_key_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.auth.username.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.auth.username":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.auth.username.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.auth":[
      "password",
      "username"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.auth.password.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.auth.password":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.auth.password.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http":[
      "auth",
      "buffer",
      "format",
      "tls_ca_cert_path",
      "tls_client_cert_path",
      "tls_private_key_passphrase",
      "tls_private_key_path"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.tls_client_cert_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.tls_client_cert_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.tls_client_cert_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.tls_ca_cert_path.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.tls_ca_cert_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.tls_ca_cert_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.tls_private_key_passphrase.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.tls_private_key_passphrase":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.tls_private_key_passphrase.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.tls_private_key_path.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.tls_private_key_path":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.clusteroutput.spec.http.tls_private_key_path.mountFrom":[
      "secretkeyref"
   ],
   "catalog.cattle.io.v1.clusterrepo.spec":[
      "clientsecret"
   ],
   "catalog.cattle.io.v1.clusterrepo":[
      "spec",
      "status"
   ],
   "catalog.cattle.io.v1.clusterrepo.status":[
      "conditions"
   ],
   "fleet.cattle.io.v1alpha1.clusterregistration":[
      "spec",
      "status"
   ],
   "fleet.cattle.io.v1alpha1.cluster.spec.agentEnvVars.valueFrom":[
      "configmapkeyref",
      "fieldref",
      "resourcefieldref",
      "secretkeyref"
   ],
   "fleet.cattle.io.v1alpha1.cluster.spec.agentEnvVars":[
      "valuefrom"
   ],
   "fleet.cattle.io.v1alpha1.cluster.spec":[
      "agentenvvars"
   ],
   "fleet.cattle.io.v1alpha1.cluster":[
      "spec",
      "status"
   ],
   "fleet.cattle.io.v1alpha1.cluster.status":[
      "agent",
      "conditions",
      "display",
      "resourcecounts",
      "summary"
   ],
   "fleet.cattle.io.v1alpha1.cluster.status.summary.nonReadyResources.nonReadyStatus":[
      "summary"
   ],
   "fleet.cattle.io.v1alpha1.cluster.status.summary.nonReadyResources":[
      "modifiedstatus",
      "nonreadystatus"
   ],
   "fleet.cattle.io.v1alpha1.cluster.status.summary":[
      "nonreadyresources"
   ],
   "networking.istio.io.v1beta1.gateway.spec.servers":[
      "port",
      "tls"
   ],
   "networking.istio.io.v1beta1.gateway.spec":[
      "servers"
   ],
   "networking.istio.io.v1beta1.gateway":[
      "spec",
      "status"
   ],
   "rke-machine.cattle.io.v1.linodemachinetemplate.spec.template.spec.common":[
      "taints"
   ],
   "rke-machine.cattle.io.v1.linodemachinetemplate.spec.template.spec":[
      "common"
   ],
   "rke-machine.cattle.io.v1.linodemachinetemplate.spec.template":[
      "spec"
   ],
   "rke-machine.cattle.io.v1.linodemachinetemplate.spec":[
      "template"
   ],
   "rke-machine.cattle.io.v1.linodemachinetemplate":[
      "spec"
   ],
   "rke-machine.cattle.io.v1.harvestermachinetemplate.spec.template.spec.common":[
      "taints"
   ],
   "rke-machine.cattle.io.v1.harvestermachinetemplate.spec.template.spec":[
      "common"
   ],
   "rke-machine.cattle.io.v1.harvestermachinetemplate.spec.template":[
      "spec"
   ],
   "rke-machine.cattle.io.v1.harvestermachinetemplate.spec":[
      "template"
   ],
   "rke-machine.cattle.io.v1.harvestermachinetemplate":[
      "spec"
   ],
   "rke-machine.cattle.io.v1.digitaloceanmachine.spec.common":[
      "taints"
   ],
   "rke-machine.cattle.io.v1.digitaloceanmachine.spec":[
      "common"
   ],
   "rke-machine.cattle.io.v1.digitaloceanmachine":[
      "spec",
      "status"
   ],
   "rke-machine.cattle.io.v1.digitaloceanmachine.status":[
      "addresses",
      "conditions"
   ],
   "ui.cattle.io.v1.navlink.spec":[
      "toservice"
   ],
   "ui.cattle.io.v1.navlink":[
      "spec"
   ],
   "ui.cattle.io":[
      "navlink"
   ],
   "cis.cattle.io.v1.clusterscanprofile":[
      "spec"
   ],
   "templates.gatekeeper.sh.v1.constrainttemplate.spec.crd.spec":[
      "names",
      "validation"
   ],
   "templates.gatekeeper.sh.v1.constrainttemplate.spec.crd.spec.validation":[
      "openapiv3schema"
   ],
   "templates.gatekeeper.sh.v1.constrainttemplate.spec.crd":[
      "spec"
   ],
   "templates.gatekeeper.sh.v1.constrainttemplate.spec":[
      "crd",
      "targets"
   ],
   "templates.gatekeeper.sh.v1.constrainttemplate":[
      "spec",
      "status"
   ],
   "templates.gatekeeper.sh.v1.constrainttemplate.status.byPod":[
      "errors"
   ],
   "templates.gatekeeper.sh.v1.constrainttemplate.status":[
      "bypod"
   ],
   "templates.gatekeeper.sh":[
      "constrainttemplate"
   ],
   "rke-machine.cattle.io.v1.digitaloceanmachinetemplate.spec.template.spec.common":[
      "taints"
   ],
   "rke-machine.cattle.io.v1.digitaloceanmachinetemplate.spec.template.spec":[
      "common"
   ],
   "rke-machine.cattle.io.v1.digitaloceanmachinetemplate.spec.template":[
      "spec"
   ],
   "rke-machine.cattle.io.v1.digitaloceanmachinetemplate.spec":[
      "template"
   ],
   "rke-machine.cattle.io.v1.digitaloceanmachinetemplate":[
      "spec"
   ],
   "fleet.cattle.io.v1alpha1.bundlenamespacemapping.namespaceSelector":[
      "matchexpressions"
   ],
   "fleet.cattle.io.v1alpha1.bundlenamespacemapping":[
      "bundleselector",
      "namespaceselector"
   ],
   "fleet.cattle.io.v1alpha1.bundlenamespacemapping.bundleSelector":[
      "matchexpressions"
   ],
   "networking.istio.io.v1beta1.serviceentry":[
      "spec",
      "status"
   ],
   "networking.istio.io.v1beta1.serviceentry.spec":[
      "endpoints",
      "ports",
      "workloadselector"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes":[
      "awselasticblockstore",
      "azuredisk",
      "azurefile",
      "cephfs",
      "cinder",
      "configmap",
      "csi",
      "downwardapi",
      "emptydir",
      "fc",
      "flexvolume",
      "flocker",
      "gcepersistentdisk",
      "gitrepo",
      "glusterfs",
      "hostpath",
      "iscsi",
      "nfs",
      "persistentvolumeclaim",
      "photonpersistentdisk",
      "portworxvolume",
      "projected",
      "quobyte",
      "rbd",
      "scaleio",
      "secret",
      "storageos",
      "vspherevolume"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.secret":[
      "items"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.iscsi":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.downwardAPI.items":[
      "fieldref",
      "resourcefieldref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.downwardAPI":[
      "items"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.flexVolume":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.cephfs":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.cinder":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.storageos":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.configMap":[
      "items"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.scaleIO":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.csi":[
      "nodepublishsecretref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.projected.sources.configMap":[
      "items"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.projected.sources":[
      "configmap",
      "downwardapi",
      "secret",
      "serviceaccounttoken"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.projected.sources.downwardAPI.items":[
      "fieldref",
      "resourcefieldref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.projected.sources.downwardAPI":[
      "items"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.projected.sources.secret":[
      "items"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.projected":[
      "sources"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.volumes.rbd":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec":[
      "affinity",
      "alertmanagerconfignamespaceselector",
      "alertmanagerconfigselector",
      "containers",
      "imagepullsecrets",
      "initcontainers",
      "podmetadata",
      "resources",
      "securitycontext",
      "storage",
      "tolerations",
      "topologyspreadconstraints",
      "volumemounts",
      "volumes"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.alertmanagerConfigNamespaceSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.alertmanagerConfigSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.securityContext":[
      "selinuxoptions",
      "sysctls",
      "windowsoptions"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.env.valueFrom":[
      "configmapkeyref",
      "fieldref",
      "resourcefieldref",
      "secretkeyref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.env":[
      "valuefrom"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers":[
      "env",
      "envfrom",
      "lifecycle",
      "livenessprobe",
      "ports",
      "readinessprobe",
      "resources",
      "securitycontext",
      "startupprobe",
      "volumedevices",
      "volumemounts"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.livenessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.livenessProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.securityContext":[
      "capabilities",
      "selinuxoptions",
      "windowsoptions"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.lifecycle.postStart":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.lifecycle.postStart.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.lifecycle":[
      "poststart",
      "prestop"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.lifecycle.preStop":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.lifecycle.preStop.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.readinessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.readinessProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.envFrom":[
      "configmapref",
      "secretref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.startupProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.initContainers.startupProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.envFrom":[
      "configmapref",
      "secretref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers":[
      "env",
      "envfrom",
      "lifecycle",
      "livenessprobe",
      "ports",
      "readinessprobe",
      "resources",
      "securitycontext",
      "startupprobe",
      "volumedevices",
      "volumemounts"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.securityContext":[
      "capabilities",
      "selinuxoptions",
      "windowsoptions"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.readinessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.readinessProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.livenessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.livenessProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.env.valueFrom":[
      "configmapkeyref",
      "fieldref",
      "resourcefieldref",
      "secretkeyref"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.env":[
      "valuefrom"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.lifecycle.postStart.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.lifecycle.postStart":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.lifecycle":[
      "poststart",
      "prestop"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.lifecycle.preStop":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.lifecycle.preStop.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.startupProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.containers.startupProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.storage":[
      "emptydir",
      "volumeclaimtemplate"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.storage.volumeClaimTemplate.status":[
      "conditions"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.storage.volumeClaimTemplate":[
      "metadata",
      "spec",
      "status"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.storage.volumeClaimTemplate.spec.selector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.storage.volumeClaimTemplate.spec":[
      "datasource",
      "resources",
      "selector"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution":[
      "podaffinityterm"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.podAntiAffinity":[
      "preferredduringschedulingignoredduringexecution",
      "requiredduringschedulingignoredduringexecution"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity":[
      "nodeaffinity",
      "podaffinity",
      "podantiaffinity"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference":[
      "matchexpressions",
      "matchfields"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution":[
      "preference"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.nodeAffinity":[
      "preferredduringschedulingignoredduringexecution",
      "requiredduringschedulingignoredduringexecution"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms":[
      "matchexpressions",
      "matchfields"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution":[
      "nodeselectorterms"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution":[
      "podaffinityterm"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.podAffinity":[
      "preferredduringschedulingignoredduringexecution",
      "requiredduringschedulingignoredduringexecution"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.topologySpreadConstraints.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.alertmanager.spec.topologySpreadConstraints":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.alertmanager":[
      "spec",
      "status"
   ],
   "rke-machine-config.cattle.io.v1.vmwarevsphereconfig.common":[
      "taints"
   ],
   "rke-machine-config.cattle.io.v1.vmwarevsphereconfig":[
      "common"
   ],
   "networking.istio.io.v1beta1.sidecar":[
      "spec",
      "status"
   ],
   "networking.istio.io.v1beta1.sidecar.spec":[
      "egress",
      "ingress",
      "outboundtrafficpolicy",
      "workloadselector"
   ],
   "networking.istio.io.v1beta1.sidecar.spec.egress":[
      "port"
   ],
   "networking.istio.io.v1beta1.sidecar.spec.ingress":[
      "port"
   ],
   "networking.istio.io.v1beta1.sidecar.spec.outboundTrafficPolicy.egressProxy":[
      "port"
   ],
   "networking.istio.io.v1beta1.sidecar.spec.outboundTrafficPolicy":[
      "egressproxy"
   ],
   "catalog.cattle.io.v1.operation.status":[
      "conditions"
   ],
   "catalog.cattle.io.v1.operation":[
      "status"
   ],
   "management.cattle.io.v3.fleetworkspace":[
      "status"
   ],
   "logging.banzaicloud.io.v1beta1.flow":[
      "spec",
      "status"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.enhanceK8s.ca_file.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.enhanceK8s.ca_file":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.enhanceK8s.ca_file.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.enhanceK8s":[
      "ca_file",
      "client_cert",
      "client_key"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.enhanceK8s.client_key.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.enhanceK8s.client_key":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.enhanceK8s.client_key.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.enhanceK8s.client_cert.mountFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.enhanceK8s.client_cert":[
      "mountfrom",
      "valuefrom"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.enhanceK8s.client_cert.valueFrom":[
      "secretkeyref"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters":[
      "concat",
      "dedot",
      "detectexceptions",
      "enhancek8s",
      "geoip",
      "grep",
      "kube_events_timestamp",
      "parser",
      "prometheus",
      "record_modifier",
      "record_transformer",
      "stdout",
      "sumologic",
      "tag_normaliser",
      "throttle"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.prometheus":[
      "metrics"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.parser.parsers":[
      "patterns"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.parser":[
      "parse",
      "parsers"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.parser.parse":[
      "patterns"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.geoip":[
      "records"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.grep":[
      "and",
      "exclude",
      "or",
      "regexp"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.grep.or":[
      "exclude",
      "regexp"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.grep.and":[
      "exclude",
      "regexp"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.record_modifier":[
      "records",
      "replaces"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.filters.record_transformer":[
      "records"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec":[
      "filters",
      "match"
   ],
   "logging.banzaicloud.io.v1beta1.flow.spec.match":[
      "exclude",
      "select"
   ],
   "monitoring.coreos.com.v1.servicemonitor.spec.endpoints":[
      "authorization",
      "basicauth",
      "bearertokensecret",
      "metricrelabelings",
      "oauth2",
      "relabelings",
      "tlsconfig"
   ],
   "monitoring.coreos.com.v1.servicemonitor.spec.endpoints.tlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.servicemonitor.spec.endpoints.tlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1.servicemonitor.spec.endpoints.tlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.servicemonitor.spec.endpoints.basicAuth":[
      "password",
      "username"
   ],
   "monitoring.coreos.com.v1.servicemonitor.spec.endpoints.authorization":[
      "credentials"
   ],
   "monitoring.coreos.com.v1.servicemonitor.spec.endpoints.oauth2.clientId":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.servicemonitor.spec.endpoints.oauth2":[
      "clientid",
      "clientsecret"
   ],
   "monitoring.coreos.com.v1.servicemonitor.spec":[
      "endpoints",
      "namespaceselector",
      "selector"
   ],
   "monitoring.coreos.com.v1.servicemonitor.spec.selector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.servicemonitor":[
      "spec"
   ],
   "io.k8s.api.coordination.v1":[
      "leasespec"
   ],
   "coordination.k8s.io":[
      "lease"
   ],
   "telemetry.istio.io.v1alpha1.telemetry.spec.accessLogging":[
      "providers"
   ],
   "telemetry.istio.io.v1alpha1.telemetry.spec":[
      "accesslogging",
      "metrics",
      "selector",
      "tracing"
   ],
   "telemetry.istio.io.v1alpha1.telemetry.spec.metrics.overrides":[
      "match",
      "tagoverrides"
   ],
   "telemetry.istio.io.v1alpha1.telemetry.spec.metrics":[
      "overrides",
      "providers"
   ],
   "telemetry.istio.io.v1alpha1.telemetry.spec.tracing":[
      "customtags",
      "providers"
   ],
   "telemetry.istio.io.v1alpha1.telemetry.spec.tracing.customTags":[
      "environment",
      "header",
      "literal"
   ],
   "telemetry.istio.io.v1alpha1.telemetry":[
      "spec",
      "status"
   ],
   "telemetry.istio.io":[
      "telemetry"
   ],
   "status.gatekeeper.sh.v1beta1.constrainttemplatepodstatus.status":[
      "errors"
   ],
   "status.gatekeeper.sh.v1beta1.constrainttemplatepodstatus":[
      "status"
   ],
   "monitoring.coreos.com.v1.thanosruler":[
      "spec",
      "status"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.securityContext":[
      "selinuxoptions",
      "sysctls",
      "windowsoptions"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec":[
      "affinity",
      "alertmanagersconfig",
      "containers",
      "grpcservertlsconfig",
      "imagepullsecrets",
      "initcontainers",
      "objectstorageconfig",
      "podmetadata",
      "prometheusrulesexcludedfromenforce",
      "queryconfig",
      "resources",
      "rulenamespaceselector",
      "ruleselector",
      "securitycontext",
      "storage",
      "tolerations",
      "topologyspreadconstraints",
      "tracingconfig",
      "volumes"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution":[
      "podaffinityterm"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.podAffinity":[
      "preferredduringschedulingignoredduringexecution",
      "requiredduringschedulingignoredduringexecution"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity":[
      "nodeaffinity",
      "podaffinity",
      "podantiaffinity"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution":[
      "podaffinityterm"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.podAntiAffinity":[
      "preferredduringschedulingignoredduringexecution",
      "requiredduringschedulingignoredduringexecution"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference":[
      "matchexpressions",
      "matchfields"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution":[
      "preference"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.nodeAffinity":[
      "preferredduringschedulingignoredduringexecution",
      "requiredduringschedulingignoredduringexecution"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms":[
      "matchexpressions",
      "matchfields"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution":[
      "nodeselectorterms"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers":[
      "env",
      "envfrom",
      "lifecycle",
      "livenessprobe",
      "ports",
      "readinessprobe",
      "resources",
      "securitycontext",
      "startupprobe",
      "volumedevices",
      "volumemounts"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.envFrom":[
      "configmapref",
      "secretref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.securityContext":[
      "capabilities",
      "selinuxoptions",
      "windowsoptions"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.lifecycle.postStart":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.lifecycle.postStart.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.lifecycle":[
      "poststart",
      "prestop"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.lifecycle.preStop":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.lifecycle.preStop.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.livenessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.livenessProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.readinessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.readinessProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.env.valueFrom":[
      "configmapkeyref",
      "fieldref",
      "resourcefieldref",
      "secretkeyref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.env":[
      "valuefrom"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.startupProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.containers.startupProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.topologySpreadConstraints.labelSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.topologySpreadConstraints":[
      "labelselector"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.ruleSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.env.valueFrom":[
      "configmapkeyref",
      "fieldref",
      "resourcefieldref",
      "secretkeyref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.env":[
      "valuefrom"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers":[
      "env",
      "envfrom",
      "lifecycle",
      "livenessprobe",
      "ports",
      "readinessprobe",
      "resources",
      "securitycontext",
      "startupprobe",
      "volumedevices",
      "volumemounts"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.lifecycle.preStop":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.lifecycle.preStop.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.lifecycle":[
      "poststart",
      "prestop"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.lifecycle.postStart":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.lifecycle.postStart.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.envFrom":[
      "configmapref",
      "secretref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.livenessProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.livenessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.readinessProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.readinessProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.securityContext":[
      "capabilities",
      "selinuxoptions",
      "windowsoptions"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.startupProbe":[
      "exec",
      "httpget",
      "tcpsocket"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.initContainers.startupProbe.httpGet":[
      "httpheaders"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.storage":[
      "emptydir",
      "volumeclaimtemplate"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.storage.volumeClaimTemplate":[
      "metadata",
      "spec",
      "status"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.storage.volumeClaimTemplate.spec":[
      "datasource",
      "resources",
      "selector"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.storage.volumeClaimTemplate.spec.selector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.storage.volumeClaimTemplate.status":[
      "conditions"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.ruleNamespaceSelector":[
      "matchexpressions"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.grpcServerTlsConfig.cert":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.grpcServerTlsConfig":[
      "ca",
      "cert",
      "keysecret"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.grpcServerTlsConfig.ca":[
      "configmap",
      "secret"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes":[
      "awselasticblockstore",
      "azuredisk",
      "azurefile",
      "cephfs",
      "cinder",
      "configmap",
      "csi",
      "downwardapi",
      "emptydir",
      "fc",
      "flexvolume",
      "flocker",
      "gcepersistentdisk",
      "gitrepo",
      "glusterfs",
      "hostpath",
      "iscsi",
      "nfs",
      "persistentvolumeclaim",
      "photonpersistentdisk",
      "portworxvolume",
      "projected",
      "quobyte",
      "rbd",
      "scaleio",
      "secret",
      "storageos",
      "vspherevolume"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.scaleIO":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.cephfs":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.storageos":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.flexVolume":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.rbd":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.secret":[
      "items"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.projected.sources.secret":[
      "items"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.projected.sources":[
      "configmap",
      "downwardapi",
      "secret",
      "serviceaccounttoken"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.projected.sources.configMap":[
      "items"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.projected.sources.downwardAPI.items":[
      "fieldref",
      "resourcefieldref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.projected.sources.downwardAPI":[
      "items"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.projected":[
      "sources"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.iscsi":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.csi":[
      "nodepublishsecretref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.cinder":[
      "secretref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.configMap":[
      "items"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.downwardAPI.items":[
      "fieldref",
      "resourcefieldref"
   ],
   "monitoring.coreos.com.v1.thanosruler.spec.volumes.downwardAPI":[
      "items"
   ],
   "rke.cattle.io.v1.etcdsnapshot":[
      "snapshotfile",
      "status"
   ],
   "rke.cattle.io.v1.etcdsnapshot.snapshotFile":[
      "s3"
   ],
   "resources.cattle.io.v1.resourceset.resourceSelectors.labelSelectors":[
      "matchexpressions"
   ],
   "resources.cattle.io.v1.resourceset.resourceSelectors":[
      "labelselectors"
   ],
   "resources.cattle.io.v1.resourceset":[
      "controllerreferences",
      "resourceselectors"
   ],
   "fleet.cattle.io.v1alpha1.imagescan.status":[
      "conditions"
   ],
   "fleet.cattle.io.v1alpha1.imagescan":[
      "spec",
      "status"
   ],
   "fleet.cattle.io.v1alpha1.imagescan.spec":[
      "policy",
      "secretref"
   ],
   "fleet.cattle.io.v1alpha1.imagescan.spec.policy":[
      "alphabetical",
      "semver"
   ],
   "io.k8s.api.policy.v1beta1":[
      "allowedcsidriver",
      "allowedflexvolume",
      "allowedhostpath",
      "fsgroupstrategyoptions",
      "hostportrange",
      "idrange",
      "podsecuritypolicyspec",
      "runasgroupstrategyoptions",
      "runasuserstrategyoptions",
      "runtimeclassstrategyoptions",
      "selinuxstrategyoptions",
      "supplementalgroupsstrategyoptions"
   ],
   "io.k8s.api.authentication.v1":[
      "tokenreviewspec",
      "tokenreviewstatus",
      "userinfo"
   ],
   "authentication.k8s.io":[
      "tokenreview"
   ],
   "rke.cattle.io.v1.rkecluster.spec":[
      "controlplaneendpoint"
   ],
   "rke.cattle.io.v1.rkecluster":[
      "spec",
      "status"
   ],
   "rke.cattle.io.v1.rkecluster.status":[
      "conditions"
   ],
   "cis.cattle.io.v1.clusterscanbenchmark":[
      "spec"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.spec.options.helm":[
      "values",
      "valuesfrom"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.spec.options.helm.valuesFrom":[
      "configmapkeyref",
      "secretkeyref"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.spec.options":[
      "diff",
      "helm",
      "kustomize",
      "yaml"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.spec.options.diff.comparePatches":[
      "operations"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.spec.options.diff":[
      "comparepatches"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.spec":[
      "dependson",
      "options",
      "stagedoptions"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.spec.stagedOptions.diff.comparePatches":[
      "operations"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.spec.stagedOptions.diff":[
      "comparepatches"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.spec.stagedOptions":[
      "diff",
      "helm",
      "kustomize",
      "yaml"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.spec.stagedOptions.helm":[
      "values",
      "valuesfrom"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.spec.stagedOptions.helm.valuesFrom":[
      "configmapkeyref",
      "secretkeyref"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.spec.dependsOn.selector":[
      "matchexpressions"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.spec.dependsOn":[
      "selector"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment":[
      "spec",
      "status"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.status":[
      "conditions",
      "display",
      "modifiedstatus",
      "nonreadystatus"
   ],
   "fleet.cattle.io.v1alpha1.bundledeployment.status.nonReadyStatus":[
      "summary"
   ],
   "group":[
      "principal"
   ],
   "harvesterhci.io.management":[
      "cluster"
   ],
   "logging.banzaicloud.io.output":[
      "filter",
      "filters"
   ],
   "logging.banzaicloud.io.output.filters":[
      "andsection",
      "concat",
      "dedot",
      "detectexceptions",
      "excludesection",
      "geoip",
      "grep",
      "metricsection",
      "orsection",
      "parser",
      "parsesection",
      "prometheus",
      "record",
      "record_modifier",
      "record_transformer",
      "regexpsection",
      "replace",
      "stdout",
      "sumologic",
      "tag_normaliser",
      "throttle"
   ],
   "logging.banzaicloud.io.output.filters.replace":[
      "singleparsesection"
   ],
   "monitoring.coreos.com.receiver":[
      "email",
      "httpconfig",
      "opsgenie",
      "pagerduty",
      "responder",
      "slack",
      "spec",
      "webhook"
   ],
   "monitoring.coreos.com.route":[
      "spec"
   ]
}